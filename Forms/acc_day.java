/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Ahmed Kassem
 */
public class acc_day extends javax.swing.JFrame {

    int mousex;
    int mousey;

    /**
     * Creates new form acc_day
     */
    public acc_day() {
        initComponents();
        x1.setEnabled(false);
        x1.setVisible(false);
        _1.setEnabled(false);
        _1.setVisible(false);
        emp.setVisible(false);
        emp.setEnabled(false);
        doc.setVisible(false);
        doc.setEnabled(false);
        EMPEXP.setVisible(false);
        EMPEXP.setEnabled(false);
        baky1.setVisible(false);
        baky1.setEnabled(false);
        tage1.setVisible(false);
        tage1.setEnabled(false);
        DOCEXP.setVisible(false);
        DOCEXP.setEnabled(false);
        baky.setVisible(false);
        baky.setEnabled(false);
        tage.setVisible(false);
        tage.setEnabled(false);
        EmpAdd.setVisible(false);
        EmpAdd.setEnabled(false);
        DocAdd.setVisible(false);
        DocAdd.setEnabled(false);
        em1.setVisible(false);
        em1.setEnabled(false);
        em2.setVisible(false);
        em2.setEnabled(false);
        dc1.setVisible(false);
        dc1.setEnabled(false);
        dc2.setVisible(false);
        dc2.setEnabled(false);
        adde1.setVisible(false);
        adde1.setEnabled(false);
        adddc1.setVisible(false);
        adddc1.setEnabled(false);
        exit1.setVisible(false);
        exit1.setEnabled(false);

        cancelE1.setVisible(false);
        cancelE1.setEnabled(false);
        saveE1.setVisible(false);
        saveE1.setEnabled(false);
        canceltE1.setVisible(false);
        canceltE1.setEnabled(false);
        savetE1.setVisible(false);
        savetE1.setEnabled(false);
        tagelE1.setVisible(false);
        tagelE1.setEnabled(false);
        tagelE2.setVisible(false);
        tagelE2.setEnabled(false);
        khasmE1.setVisible(false);
        khasmE1.setEnabled(false);
        khasmE2.setVisible(false);
        khasmE2.setEnabled(false);

        cancelD1.setVisible(false);
        cancelD1.setEnabled(false);
        saveD1.setVisible(false);
        saveD1.setEnabled(false);
        canceltD1.setVisible(false);
        canceltD1.setEnabled(false);
        savetD1.setVisible(false);
        savetD1.setEnabled(false);
        tagelD1.setVisible(false);
        tagelD1.setEnabled(false);
        tagelD2.setVisible(false);
        tagelD2.setEnabled(false);
        khasmD1.setVisible(false);
        khasmD1.setEnabled(false);
        khasmD2.setVisible(false);
        khasmD2.setEnabled(false);

        EAdd1.setVisible(false);
        EAdd1.setEnabled(false);
        DAdd1.setVisible(false);
        DAdd1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        docname = new javax.swing.JComboBox<>();
        empname = new javax.swing.JComboBox<>();
        dateday = new javax.swing.JLabel();
        chnum = new javax.swing.JLabel();
        chcost = new javax.swing.JTextField();
        exit = new javax.swing.JLabel();
        exit1 = new javax.swing.JLabel();
        bar = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        x1 = new javax.swing.JLabel();
        _ = new javax.swing.JLabel();
        _1 = new javax.swing.JLabel();
        em = new javax.swing.JLabel();
        em1 = new javax.swing.JLabel();
        em2 = new javax.swing.JLabel();
        dc = new javax.swing.JLabel();
        dc1 = new javax.swing.JLabel();
        dc2 = new javax.swing.JLabel();
        doc = new javax.swing.JPanel();
        adddc = new javax.swing.JLabel();
        adddc1 = new javax.swing.JLabel();
        resnumd = new javax.swing.JTextField();
        costd = new javax.swing.JLabel();
        docnum = new javax.swing.JTextField();
        accdnum = new javax.swing.JTextField();
        totalcoste = new javax.swing.JLabel();
        maine1 = new javax.swing.JLabel();
        emp = new javax.swing.JPanel();
        adde = new javax.swing.JLabel();
        adde1 = new javax.swing.JLabel();
        accenum = new javax.swing.JTextField();
        empnum = new javax.swing.JTextField();
        coste = new javax.swing.JLabel();
        resnum = new javax.swing.JTextField();
        empcost = new javax.swing.JTextField();
        empcostday = new javax.swing.JTextField();
        maine = new javax.swing.JLabel();
        DOCEXP = new javax.swing.JPanel();
        tagelD = new javax.swing.JLabel();
        tagelD1 = new javax.swing.JLabel();
        tagelD2 = new javax.swing.JLabel();
        khasmD = new javax.swing.JLabel();
        khasmD1 = new javax.swing.JLabel();
        khasmD2 = new javax.swing.JLabel();
        Dexp = new javax.swing.JTextField();
        Docdis = new javax.swing.JTextField();
        baky = new javax.swing.JPanel();
        tageldate1 = new com.toedter.calendar.JDateChooser();
        cancelD = new javax.swing.JLabel();
        cancelD1 = new javax.swing.JLabel();
        saveD = new javax.swing.JLabel();
        saveD1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tage = new javax.swing.JPanel();
        tageldate = new com.toedter.calendar.JDateChooser();
        canceltD = new javax.swing.JLabel();
        canceltD1 = new javax.swing.JLabel();
        savetD = new javax.swing.JLabel();
        savetD1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        doctotal = new javax.swing.JTextField();
        doctotaldis = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        paybakd = new javax.swing.JLabel();
        EMPEXP = new javax.swing.JPanel();
        tagelE = new javax.swing.JLabel();
        tagelE1 = new javax.swing.JLabel();
        tagelE2 = new javax.swing.JLabel();
        khasmE = new javax.swing.JLabel();
        khasmE1 = new javax.swing.JLabel();
        khasmE2 = new javax.swing.JLabel();
        Eexp = new javax.swing.JTextField();
        Empdis = new javax.swing.JTextField();
        baky1 = new javax.swing.JPanel();
        tageldate2 = new com.toedter.calendar.JDateChooser();
        cancelE = new javax.swing.JLabel();
        cancelE1 = new javax.swing.JLabel();
        saveE = new javax.swing.JLabel();
        saveE1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tage1 = new javax.swing.JPanel();
        tageldate3 = new com.toedter.calendar.JDateChooser();
        canceltE = new javax.swing.JLabel();
        canceltE1 = new javax.swing.JLabel();
        savetE = new javax.swing.JLabel();
        savetE1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        emptotal = new javax.swing.JTextField();
        emptotaldis = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        paybake = new javax.swing.JLabel();
        EmpAdd = new javax.swing.JPanel();
        EAdd = new javax.swing.JLabel();
        EAdd1 = new javax.swing.JLabel();
        DocAdd = new javax.swing.JPanel();
        DAdd = new javax.swing.JLabel();
        DAdd1 = new javax.swing.JLabel();
        main = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        docname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        docname.setBorder(null);
        docname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                docnameItemStateChanged(evt);
            }
        });
        getContentPane().add(docname);
        docname.setBounds(736, 145, 159, 22);

        empname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        empname.setBorder(null);
        empname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                empnameItemStateChanged(evt);
            }
        });
        getContentPane().add(empname);
        empname.setBounds(503, 145, 159, 22);

        dateday.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(dateday);
        dateday.setBounds(276, 145, 157, 22);

        chnum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chnum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(chnum);
        chnum.setBounds(140, 145, 78, 22);

        chcost.setEditable(false);
        chcost.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chcost.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        chcost.setBorder(null);
        chcost.setOpaque(false);
        getContentPane().add(chcost);
        chcost.setBounds(37, 145, 78, 21);

        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitMouseExited(evt);
            }
        });
        getContentPane().add(exit);
        exit.setBounds(71, 445, 112, 37);

        exit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/accخروج.png"))); // NOI18N
        getContentPane().add(exit1);
        exit1.setBounds(71, 445, 112, 37);

        bar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barMouseDragged(evt);
            }
        });
        bar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barMousePressed(evt);
            }
        });
        getContentPane().add(bar);
        bar.setBounds(0, 0, 900, 20);

        x.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                xMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                xMouseExited(evt);
            }
        });
        getContentPane().add(x);
        x.setBounds(919, 1, 22, 18);

        x1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/13.png"))); // NOI18N
        x1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(x1);
        x1.setBounds(917, -1, 24, 21);

        _.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        _.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                _MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                _MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                _MouseExited(evt);
            }
        });
        getContentPane().add(_);
        _.setBounds(896, 0, 22, 20);

        _1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/15.png"))); // NOI18N
        getContentPane().add(_1);
        _1.setBounds(896, 0, 22, 20);

        em.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        em.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                emMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                emMouseExited(evt);
            }
        });
        getContentPane().add(em);
        em.setBounds(809, 197, 112, 37);

        em1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/الموظف.png"))); // NOI18N
        getContentPane().add(em1);
        em1.setBounds(809, 197, 112, 37);

        em2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/الموظف.png"))); // NOI18N
        getContentPane().add(em2);
        em2.setBounds(809, 197, 112, 37);

        dc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dcMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dcMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dcMouseExited(evt);
            }
        });
        getContentPane().add(dc);
        dc.setBounds(809, 235, 112, 37);

        dc1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/الطبيب.png"))); // NOI18N
        getContentPane().add(dc1);
        dc1.setBounds(809, 235, 112, 37);

        dc2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/الطبيب.png"))); // NOI18N
        getContentPane().add(dc2);
        dc2.setBounds(809, 235, 112, 37);

        doc.setLayout(null);

        adddc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adddc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adddcMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                adddcMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                adddcMouseExited(evt);
            }
        });
        doc.add(adddc);
        adddc.setBounds(29, 73, 112, 37);

        adddc1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCاضافة.png"))); // NOI18N
        doc.add(adddc1);
        adddc1.setBounds(29, 73, 112, 37);

        resnumd.setEditable(false);
        resnumd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        resnumd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        resnumd.setBorder(null);
        resnumd.setOpaque(false);
        doc.add(resnumd);
        resnumd.setBounds(143, 34, 80, 20);

        costd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        costd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doc.add(costd);
        costd.setBounds(250, 34, 80, 20);

        docnum.setEditable(false);
        docnum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        docnum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        docnum.setBorder(null);
        docnum.setOpaque(false);
        doc.add(docnum);
        docnum.setBounds(356, 35, 80, 20);

        accdnum.setEditable(false);
        accdnum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        accdnum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        accdnum.setBorder(null);
        accdnum.setOpaque(false);
        doc.add(accdnum);
        accdnum.setBounds(463, 34, 80, 20);

        totalcoste.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalcoste.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doc.add(totalcoste);
        totalcoste.setBounds(32, 34, 80, 20);

        maine1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCDoc.png"))); // NOI18N
        doc.add(maine1);
        maine1.setBounds(0, 0, 573, 126);

        getContentPane().add(doc);
        doc.setBounds(239, 235, 573, 126);

        emp.setLayout(null);

        adde.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addeMouseExited(evt);
            }
        });
        emp.add(adde);
        adde.setBounds(30, 77, 112, 37);

        adde1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCاضافة.png"))); // NOI18N
        emp.add(adde1);
        adde1.setBounds(30, 77, 112, 37);

        accenum.setEditable(false);
        accenum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        accenum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        accenum.setBorder(null);
        accenum.setOpaque(false);
        emp.add(accenum);
        accenum.setBounds(463, 34, 80, 21);

        empnum.setEditable(false);
        empnum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        empnum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        empnum.setBorder(null);
        empnum.setOpaque(false);
        emp.add(empnum);
        empnum.setBounds(356, 34, 80, 21);

        coste.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        coste.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emp.add(coste);
        coste.setBounds(250, 34, 80, 21);

        resnum.setEditable(false);
        resnum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        resnum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        resnum.setBorder(null);
        resnum.setOpaque(false);
        emp.add(resnum);
        resnum.setBounds(143, 34, 80, 21);

        empcost.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        empcost.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        empcost.setBorder(null);
        empcost.setOpaque(false);
        emp.add(empcost);
        empcost.setBounds(35, 34, 80, 21);

        empcostday.setEditable(false);
        empcostday.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        empcostday.setForeground(new java.awt.Color(0, 0, 51));
        empcostday.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        empcostday.setBorder(null);
        empcostday.setOpaque(false);
        emp.add(empcostday);
        empcostday.setBounds(463, 91, 80, 20);

        maine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCEmp.png"))); // NOI18N
        emp.add(maine);
        maine.setBounds(0, 0, 573, 126);

        getContentPane().add(emp);
        emp.setBounds(239, 196, 573, 126);

        DOCEXP.setLayout(null);

        tagelD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tagelD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tagelDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tagelDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tagelDMouseExited(evt);
            }
        });
        DOCEXP.add(tagelD);
        tagelD.setBounds(118, 72, 80, 30);

        tagelD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCتأجيل.png"))); // NOI18N
        DOCEXP.add(tagelD1);
        tagelD1.setBounds(118, 72, 80, 30);

        tagelD2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCتأجيل.png"))); // NOI18N
        DOCEXP.add(tagelD2);
        tagelD2.setBounds(118, 72, 80, 30);

        khasmD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        khasmD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                khasmDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                khasmDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                khasmDMouseExited(evt);
            }
        });
        DOCEXP.add(khasmD);
        khasmD.setBounds(16, 72, 80, 30);

        khasmD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCخصم.png"))); // NOI18N
        DOCEXP.add(khasmD1);
        khasmD1.setBounds(16, 72, 80, 30);

        khasmD2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCخصم.png"))); // NOI18N
        DOCEXP.add(khasmD2);
        khasmD2.setBounds(16, 72, 80, 30);

        Dexp.setEditable(false);
        Dexp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Dexp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Dexp.setBorder(null);
        Dexp.setOpaque(false);
        DOCEXP.add(Dexp);
        Dexp.setBounds(118, 34, 80, 20);

        Docdis.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Docdis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Docdis.setBorder(null);
        Docdis.setOpaque(false);
        DOCEXP.add(Docdis);
        Docdis.setBounds(15, 34, 80, 20);

        baky.setLayout(null);

        tageldate1.setDateFormatString("yyyy-MM-dd");
        tageldate1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        baky.add(tageldate1);
        tageldate1.setBounds(13, 10, 110, 25);

        cancelD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelDMouseExited(evt);
            }
        });
        baky.add(cancelD);
        cancelD.setBounds(116, 43, 90, 29);

        cancelD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالغاء.png"))); // NOI18N
        baky.add(cancelD1);
        cancelD1.setBounds(116, 43, 90, 29);

        saveD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveDMouseExited(evt);
            }
        });
        baky.add(saveD);
        saveD.setBounds(11, 43, 90, 29);

        saveD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCحفظ.png"))); // NOI18N
        baky.add(saveD1);
        saveD1.setBounds(11, 43, 90, 29);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالباقى الى يوم.png"))); // NOI18N
        baky.add(jLabel3);
        jLabel3.setBounds(0, 0, 212, 80);

        DOCEXP.add(baky);
        baky.setBounds(0, 100, 212, 80);

        tage.setLayout(null);

        tageldate.setDateFormatString("yyyy-MM-dd");
        tageldate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tage.add(tageldate);
        tageldate.setBounds(13, 10, 135, 25);

        canceltD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        canceltD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canceltDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                canceltDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                canceltDMouseExited(evt);
            }
        });
        tage.add(canceltD);
        canceltD.setBounds(116, 43, 90, 29);

        canceltD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالغاء.png"))); // NOI18N
        tage.add(canceltD1);
        canceltD1.setBounds(116, 43, 90, 29);

        savetD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        savetD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savetDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                savetDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                savetDMouseExited(evt);
            }
        });
        tage.add(savetD);
        savetD.setBounds(11, 43, 90, 29);

        savetD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCحفظ.png"))); // NOI18N
        tage.add(savetD1);
        savetD1.setBounds(11, 43, 90, 29);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالى يوم.png"))); // NOI18N
        tage.add(jLabel2);
        jLabel2.setBounds(0, 0, 212, 80);

        DOCEXP.add(tage);
        tage.setBounds(0, 100, 212, 80);

        doctotal.setEditable(false);
        doctotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        doctotal.setForeground(new java.awt.Color(0, 0, 51));
        doctotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        doctotal.setBorder(null);
        doctotal.setOpaque(false);
        DOCEXP.add(doctotal);
        doctotal.setBounds(116, 151, 81, 20);

        doctotaldis.setEditable(false);
        doctotaldis.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        doctotaldis.setForeground(new java.awt.Color(0, 0, 51));
        doctotaldis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        doctotaldis.setBorder(null);
        doctotaldis.setOpaque(false);
        DOCEXP.add(doctotaldis);
        doctotaldis.setBounds(15, 150, 81, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالخصومات.png"))); // NOI18N
        DOCEXP.add(jLabel1);
        jLabel1.setBounds(0, 0, 210, 183);
        DOCEXP.add(paybakd);
        paybakd.setBounds(90, 10, 10, 10);

        getContentPane().add(DOCEXP);
        DOCEXP.setBounds(22, 185, 210, 183);

        EMPEXP.setLayout(null);

        tagelE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tagelE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tagelEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tagelEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tagelEMouseExited(evt);
            }
        });
        EMPEXP.add(tagelE);
        tagelE.setBounds(118, 72, 80, 30);

        tagelE1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCتأجيل.png"))); // NOI18N
        EMPEXP.add(tagelE1);
        tagelE1.setBounds(118, 72, 80, 30);
        EMPEXP.add(tagelE2);
        tagelE2.setBounds(118, 72, 80, 30);

        khasmE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        khasmE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                khasmEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                khasmEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                khasmEMouseExited(evt);
            }
        });
        EMPEXP.add(khasmE);
        khasmE.setBounds(16, 72, 80, 30);

        khasmE1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCخصم.png"))); // NOI18N
        EMPEXP.add(khasmE1);
        khasmE1.setBounds(16, 72, 80, 30);
        EMPEXP.add(khasmE2);
        khasmE2.setBounds(16, 72, 80, 30);

        Eexp.setEditable(false);
        Eexp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Eexp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Eexp.setBorder(null);
        Eexp.setOpaque(false);
        EMPEXP.add(Eexp);
        Eexp.setBounds(118, 34, 80, 20);

        Empdis.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Empdis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Empdis.setBorder(null);
        Empdis.setOpaque(false);
        EMPEXP.add(Empdis);
        Empdis.setBounds(15, 34, 80, 20);

        baky1.setLayout(null);

        tageldate2.setDateFormatString("yyyy-MM-dd");
        tageldate2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        baky1.add(tageldate2);
        tageldate2.setBounds(13, 10, 110, 25);

        cancelE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelEMouseExited(evt);
            }
        });
        baky1.add(cancelE);
        cancelE.setBounds(116, 43, 90, 29);

        cancelE1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالغاء.png"))); // NOI18N
        baky1.add(cancelE1);
        cancelE1.setBounds(116, 43, 90, 29);

        saveE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveEMouseExited(evt);
            }
        });
        baky1.add(saveE);
        saveE.setBounds(11, 43, 90, 29);

        saveE1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCحفظ.png"))); // NOI18N
        baky1.add(saveE1);
        saveE1.setBounds(11, 43, 90, 29);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالباقى الى يوم.png"))); // NOI18N
        baky1.add(jLabel4);
        jLabel4.setBounds(0, 0, 212, 80);

        EMPEXP.add(baky1);
        baky1.setBounds(0, 100, 212, 80);

        tage1.setLayout(null);

        tageldate3.setDateFormatString("yyyy-MM-dd");
        tageldate3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tage1.add(tageldate3);
        tageldate3.setBounds(13, 10, 135, 25);

        canceltE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        canceltE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canceltEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                canceltEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                canceltEMouseExited(evt);
            }
        });
        tage1.add(canceltE);
        canceltE.setBounds(116, 43, 90, 29);

        canceltE1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالغاء.png"))); // NOI18N
        tage1.add(canceltE1);
        canceltE1.setBounds(116, 43, 90, 29);

        savetE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        savetE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savetEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                savetEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                savetEMouseExited(evt);
            }
        });
        tage1.add(savetE);
        savetE.setBounds(11, 43, 90, 29);

        savetE1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCحفظ.png"))); // NOI18N
        tage1.add(savetE1);
        savetE1.setBounds(11, 43, 90, 29);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالى يوم.png"))); // NOI18N
        tage1.add(jLabel5);
        jLabel5.setBounds(0, 0, 212, 80);

        EMPEXP.add(tage1);
        tage1.setBounds(0, 100, 212, 80);

        emptotal.setEditable(false);
        emptotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        emptotal.setForeground(new java.awt.Color(0, 0, 51));
        emptotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        emptotal.setBorder(null);
        emptotal.setOpaque(false);
        EMPEXP.add(emptotal);
        emptotal.setBounds(116, 150, 81, 20);

        emptotaldis.setEditable(false);
        emptotaldis.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        emptotaldis.setForeground(new java.awt.Color(0, 0, 51));
        emptotaldis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        emptotaldis.setBorder(null);
        emptotaldis.setOpaque(false);
        EMPEXP.add(emptotaldis);
        emptotaldis.setBounds(15, 150, 81, 20);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCالخصومات.png"))); // NOI18N
        EMPEXP.add(jLabel6);
        jLabel6.setBounds(0, 0, 210, 183);
        EMPEXP.add(paybake);
        paybake.setBounds(90, 10, 10, 10);

        getContentPane().add(EMPEXP);
        EMPEXP.setBounds(22, 185, 210, 183);

        EmpAdd.setLayout(null);

        EAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCتسجيل.png"))); // NOI18N
        EAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EAddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EAddMouseExited(evt);
            }
        });
        EmpAdd.add(EAdd);
        EAdd.setBounds(0, 0, 112, 37);

        EAdd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCتسجيل1.png"))); // NOI18N
        EmpAdd.add(EAdd1);
        EAdd1.setBounds(0, 0, 112, 37);

        getContentPane().add(EmpAdd);
        EmpAdd.setBounds(71, 390, 112, 37);

        DocAdd.setLayout(null);

        DAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCتسجيل.png"))); // NOI18N
        DAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DAddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DAddMouseExited(evt);
            }
        });
        DocAdd.add(DAdd);
        DAdd.setBounds(0, 0, 112, 37);

        DAdd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACCتسجيل1.png"))); // NOI18N
        DocAdd.add(DAdd1);
        DAdd1.setBounds(0, 0, 112, 37);

        getContentPane().add(DocAdd);
        DocAdd.setBounds(71, 390, 112, 37);

        main.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ACC DAY.png"))); // NOI18N
        getContentPane().add(main);
        main.setBounds(0, 0, 940, 506);

        setBounds(0, 0, 940, 506);
    }// </editor-fold>//GEN-END:initComponents
public void countDocCheck() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT COUNT(RNUMBER)FROM reservations_data WHERE Date_Reservat LIKE '%" + dateday.getText() + "%' and DOCNAM LIKE '%" + docname.getSelectedItem() + "%'";
            ResultSet r = st.executeQuery(str);

            while (r.next()) {
                chnum.setText(r.getString(1));
                resnumd.setText(r.getString(1));
            }
        } catch (Exception ex) {
            ex.getMessage();
        }
    }

    public void countEmpRes() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT COUNT(RNUMBER)FROM reservations_data WHERE Date_Reservat LIKE '%" + dateday.getText() + "%' and DOCNAM LIKE '%" + docname.getSelectedItem() + "%' and ENAME LIKE '%" + empname.getSelectedItem() + "%'";
            ResultSet r = st.executeQuery(str);

            while (r.next()) {
                resnum.setText(r.getString(1));
                empcostday.setText(String.valueOf(Double.parseDouble(empcost.getText()) * Double.parseDouble(resnum.getText())));
            }
        } catch (Exception ex) {
            ex.getMessage();
        }
    }

    public void sumCheckcost() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT SUM(COST)FROM reservations WHERE Date_Reservat='" + dateday.getText() + "' and Dname='" + docname.getSelectedItem() + "'";
            ResultSet r = st.executeQuery(str);

            while (r.next()) {
                chcost.setText(r.getString(1));
                doctotal.setText(String.valueOf(Double.parseDouble(chcost.getText()) - Double.parseDouble(totalcoste.getText())));
            }
        } catch (Exception ex) {
            ex.getMessage();
        }
    }

    public String sumEmpcost() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT SUM(Emp_Accounts)FROM accounte WHERE date_acc='" + dateday.getText() + "' and empname='" + empname.getSelectedItem() + "'";
            ResultSet r = st.executeQuery(str);
            String etotal = "";
            while (r.next()) {
                etotal = r.getString(1);
            }

            if (etotal == null || "".equals(etotal)) {
                emptotal.setText("0");
            } else {
                emptotal.setText(etotal);
            }

            String strs = "SELECT * FROM accounttotale WHERE date_acc='" + dateday.getText() + "' and Ename='" + empname.getSelectedItem() + "'";
            ResultSet rs = st.executeQuery(strs);
            String tot = "";
            while (rs.next()) {
                tot = rs.getString(4);
            }
            if (tot == null || "".equals(tot)) {
                emptotaldis.setText("0");
            } else {
                emptotaldis.setText(tot);
            }
        } catch (Exception ex) {
            ex.getMessage();
        }
        return "0";
    }

    public String sumDoccost() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT SUM(Doc_Accounts)FROM accountd WHERE date_acc='" + dateday.getText() + "' and docname='" + docname.getSelectedItem() + "'";
            ResultSet r = st.executeQuery(str);
            String etotal = "";
            while (r.next()) {
                etotal = r.getString(1);
            }

            if (etotal == null || "".equals(etotal)) {
                doctotal.setText("0");
            } else {
                doctotal.setText(etotal);
            }

            String strs = "SELECT * FROM accounttotald WHERE date_acc='" + dateday.getText() + "' and Dname='" + docname.getSelectedItem() + "'";
            ResultSet rs = st.executeQuery(strs);
            String tot = "";
            while (rs.next()) {
                tot = rs.getString(4);
            }
            if (tot == null || "".equals(tot)) {
                doctotaldis.setText("0");
            } else {
                doctotaldis.setText(tot);
            }
        } catch (Exception ex) {
            ex.getMessage();
        }
        return "0";
    }

    public String sumdocexp() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT SUM(Cost_exp)FROM expenses WHERE Date_of_exp='" + dateday.getText() + "' and Name_exp='" + docname.getSelectedItem() + "'";
            ResultSet r = st.executeQuery(str);
            String etotal = "";
            while (r.next()) {
                etotal = r.getString(1);
            }
            if (etotal == null || "".equals(etotal)) {
                Dexp.setText("0");
                Docdis.setText("0");

            } else {
                Dexp.setText(etotal);
                Docdis.setText(etotal);

            }
            String strs = "SELECT * FROM accounttotald WHERE date_acc ='" + dateday.getText() + "' and Dname ='" + empname.getSelectedItem() + "'";
            ResultSet rs = st.executeQuery(strs);
            String totd = "";
            while (rs.next()) {
                totd = rs.getString(4);
            }
            if (totd == null || "".equals(totd)) {
                doctotaldis.setText("0");
            } else {
                doctotaldis.setText(totd);
            }

            Statement sst = con.createStatement();
            String s = "SELECT * FROM expenses WHERE Date_of_exp='" + dateday.getText() + "' and Name_exp='" + docname.getSelectedItem() + "'";
            ResultSet rr = st.executeQuery(s);

            while (rr.next()) {
                paybakd.setText(rr.getString(7));
            }
        } catch (Exception ex) {
            ex.getMessage();
        }
        return "0";
    }

    public String sumEmpexp() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT SUM(Cost_exp)FROM expenses WHERE Date_of_exp='" + dateday.getText() + "' and Name_exp='" + empname.getSelectedItem() + "'";
            ResultSet r = st.executeQuery(str);
            String etotal = "";
            while (r.next()) {
                etotal = r.getString(1);
            }
            if (etotal == null || "".equals(etotal)) {
                Eexp.setText("0");
                Empdis.setText("0");

            } else {
                Eexp.setText(etotal);
                Empdis.setText(etotal);
            }

            Statement sst = con.createStatement();
            String s = "SELECT * FROM expenses WHERE Date_of_exp='" + dateday.getText() + "' and Name_exp='" + empname.getSelectedItem() + "'";
            ResultSet rs = st.executeQuery(s);

            while (rs.next()) {
                paybake.setText(rs.getString(7));
            }

        } catch (Exception ex) {
            ex.getMessage();
        }
        return "0";
    }

    public String sumAllEmpcost() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT SUM(Emp_Accounts)FROM accounte WHERE date_acc LIKE '%" + dateday.getText() + "%' and docname LIKE '%" + docname.getSelectedItem() + "%'";
            ResultSet r = st.executeQuery(str);
            String tcost = "";
            while (r.next()) {
                tcost = r.getString(1);
            }
            if (tcost == null || "".equals(tcost)) {
                totalcoste.setText("0");
                doctotal.setText("0");
            } else {
                totalcoste.setText(tcost);

            }

        } catch (Exception ex) {
            ex.getMessage();
        }
        return "0";
    }

    public void docinfo() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT * FROM doctors WHERE name LIKE '%" + docname.getSelectedItem() + "%'";
            ResultSet r = st.executeQuery(str);

            while (r.next()) {
                docnum.setText(r.getString(1));
                costd.setText(r.getString(4));
                coste.setText(r.getString(4));
            }
        } catch (Exception ex) {
            ex.getMessage();
        }

    }

    public void empinfo() {
        try {

            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String str = "SELECT * FROM employees WHERE name LIKE '%" + empname.getSelectedItem() + "%'";
            ResultSet r = st.executeQuery(str);

            while (r.next()) {
                empnum.setText(r.getString(1));
                empcost.setText(r.getString(3));
            }
        } catch (Exception ex) {
            ex.getMessage();
        }

    }
    private void adddcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adddcMouseEntered
        adddc1.setVisible(true);
        adddc1.setEnabled(true);
    }//GEN-LAST:event_adddcMouseEntered

    private void adddcMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adddcMouseExited
        adddc1.setVisible(false);
        adddc1.setEnabled(false);
    }//GEN-LAST:event_adddcMouseExited

    private void addeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addeMouseEntered
        adde1.setVisible(true);
        adde1.setEnabled(true);
    }//GEN-LAST:event_addeMouseEntered

    private void addeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addeMouseExited
        adde1.setVisible(false);
        adde1.setEnabled(false);
    }//GEN-LAST:event_addeMouseExited

    private void emMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            emp.setVisible(true);
            emp.setEnabled(true);
            em2.setVisible(true);
            em2.setEnabled(true);
            doc.setVisible(false);
            doc.setEnabled(false);
            dc2.setVisible(false);
            dc2.setEnabled(false);

            empcost.setText("0");
            coste.setText("0");
            resnum.setText("0");
            empnum.setText("0");
            empname.setSelectedItem(null);
            docname.setSelectedItem(null);

            EMPEXP.setVisible(true);
            EMPEXP.setEnabled(true);
            DOCEXP.setVisible(false);
            DOCEXP.setEnabled(false);

            EmpAdd.setVisible(true);
            EmpAdd.setEnabled(true);
            DocAdd.setVisible(false);
            DocAdd.setEnabled(false);

        }
    }//GEN-LAST:event_emMouseClicked

    private void emMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emMouseEntered
        em1.setVisible(true);
        em1.setEnabled(true);
    }//GEN-LAST:event_emMouseEntered

    private void emMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emMouseExited
        em1.setVisible(false);
        em1.setEnabled(false);
    }//GEN-LAST:event_emMouseExited

    private void dcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dcMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            emp.setVisible(false);
            emp.setEnabled(false);
            em2.setVisible(false);
            em2.setEnabled(false);
            doc.setVisible(true);
            doc.setEnabled(true);
            dc2.setVisible(true);
            dc2.setEnabled(true);

            docnum.setText("0");
            totalcoste.setText("0");
            costd.setText("0");
            resnumd.setText("0");
            empname.setSelectedItem(null);
            docname.setSelectedItem(null);

            EMPEXP.setVisible(false);
            EMPEXP.setEnabled(false);
            DOCEXP.setVisible(true);
            DOCEXP.setEnabled(true);

            EmpAdd.setVisible(false);
            EmpAdd.setEnabled(false);
            DocAdd.setVisible(true);
            DocAdd.setEnabled(true);
        }
    }//GEN-LAST:event_dcMouseClicked

    private void dcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dcMouseEntered
        dc1.setVisible(true);
        dc1.setEnabled(true);
    }//GEN-LAST:event_dcMouseEntered

    private void dcMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dcMouseExited
        dc1.setVisible(false);
        dc1.setEnabled(false);
    }//GEN-LAST:event_dcMouseExited

    private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
        exit1.setVisible(true);
        exit1.setEnabled(true);
    }//GEN-LAST:event_exitMouseEntered

    private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
        exit1.setVisible(false);
        exit1.setEnabled(false);
    }//GEN-LAST:event_exitMouseExited

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int q = JOptionPane.showConfirmDialog(this, "اضغط موافق لتأكيد الخروج", "خروج", JOptionPane.OK_CANCEL_OPTION);
            if (q == JOptionPane.OK_OPTION) {
                this.dispose();
            } else {

            }
        }
    }//GEN-LAST:event_exitMouseClicked

    private void barMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - mousex, y - mousey);
    }//GEN-LAST:event_barMouseDragged

    private void barMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barMousePressed
        mousex = evt.getX();
        mousey = evt.getY();
    }//GEN-LAST:event_barMousePressed

    private void xMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int q = JOptionPane.showConfirmDialog(this, "اضغط موافق لتأكيد الخروج", "خروج", JOptionPane.OK_CANCEL_OPTION);
            if (q == JOptionPane.OK_OPTION) {
                this.dispose();
            } else {

            }
        }
    }//GEN-LAST:event_xMouseClicked

    private void xMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseEntered
        x1.setEnabled(true);
        x1.setVisible(true);
    }//GEN-LAST:event_xMouseEntered

    private void xMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseExited
        x1.setEnabled(false);
        x1.setVisible(false);
    }//GEN-LAST:event_xMouseExited

    private void _MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            this.setState(MainFormE.ICONIFIED);
        }
    }//GEN-LAST:event__MouseClicked

    private void _MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseEntered
        _1.setEnabled(true);
        _1.setVisible(true);
    }//GEN-LAST:event__MouseEntered

    private void _MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseExited
        _1.setEnabled(false);
        _1.setVisible(false);
    }//GEN-LAST:event__MouseExited

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DB.GO.icon(this);
        DB.GO.fillCompo("DOCTORS", "NAME", docname);
        DB.GO.fillCompo("EMPLOYEES", "NAME", empname);
        Date d = new Date();
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        dateday.setText(f.format(d));
        docname.setSelectedItem(null);
        empname.setSelectedItem(null);
        accenum.setText("1");
        accdnum.setText("1");
    }//GEN-LAST:event_formWindowOpened

    private void docnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_docnameItemStateChanged
        docinfo();
        countDocCheck();
        sumCheckcost();
        sumAllEmpcost();
        countEmpRes();
        sumdocexp();
        sumEmpexp();
        sumDoccost();
    }//GEN-LAST:event_docnameItemStateChanged

    private void empnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_empnameItemStateChanged
        empinfo();
        countEmpRes();
        sumEmpcost();
        sumEmpexp();
    }//GEN-LAST:event_empnameItemStateChanged

    private void addeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addeMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if ("".equals(accenum.getText()) || "".equals(dateday.getText()) || "".equals(empnum.getText()) || "".equals(docname.getSelectedItem()) || "".equals(empname.getSelectedItem()) || "".equals(coste.getText()) || "".equals(resnum.getText()) || "".equals(empcost.getText()) || "0.0".equals(empcostday.getText()) || "".equals(chcost.getText()) || "".equals(chnum.getText())) {
                JOptionPane.showMessageDialog(this, "ربم لم تدخال جميع البيانات او لا يوجد حساب ");
            } else {
                int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق", "تأكيد", JOptionPane.OK_CANCEL_OPTION);
                if (a == JOptionPane.OK_OPTION) {
                    String str = "INSERT INTO accounte VALUES (" + accenum.getText() + ", '" + dateday.getText() + "', '" + empcostday.getText() + "', " + empnum.getText() + ", '" + docname.getSelectedItem() + "', '" + empname.getSelectedItem() + "', " + resnum.getText() + ", '" + coste.getText() + "', '" + empcost.getText() + "')";
                    boolean ifadd = DB.GO.runNunQuery(str);
                    if (ifadd) {
                        JOptionPane.showMessageDialog(this, "تم جفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);
                        empcost.setText("0");
                        coste.setText("0");
                        resnum.setText("0");
                        String ac = accenum.getText();
                        int t = Integer.parseInt(ac) + 1;
                        accenum.setText(String.valueOf(t));
                        docname.setSelectedItem(null);
                        empname.setSelectedItem(null);
                        sumEmpcost();
                        sumEmpexp();
                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                }
            }

        }
    }//GEN-LAST:event_addeMouseClicked

    private void EAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EAddMouseEntered
        EAdd1.setVisible(true);
        EAdd1.setEnabled(true);
    }//GEN-LAST:event_EAddMouseEntered

    private void EAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EAddMouseExited
        EAdd1.setVisible(false);
        EAdd1.setEnabled(false);
    }//GEN-LAST:event_EAddMouseExited

    private void DAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DAddMouseEntered
        DAdd1.setVisible(true);
        DAdd1.setEnabled(true);
    }//GEN-LAST:event_DAddMouseEntered

    private void DAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DAddMouseExited
        DAdd1.setVisible(false);
        DAdd1.setEnabled(false);
    }//GEN-LAST:event_DAddMouseExited

    private void cancelDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelDMouseEntered
        cancelD1.setVisible(true);
        cancelD1.setEnabled(true);
    }//GEN-LAST:event_cancelDMouseEntered

    private void cancelDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelDMouseExited
        cancelD1.setVisible(false);
        cancelD1.setEnabled(false);
    }//GEN-LAST:event_cancelDMouseExited

    private void saveDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveDMouseEntered
        saveD1.setVisible(true);
        saveD1.setEnabled(true);
    }//GEN-LAST:event_saveDMouseEntered

    private void saveDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveDMouseExited
        saveD1.setVisible(false);
        saveD1.setEnabled(false);
    }//GEN-LAST:event_saveDMouseExited

    private void savetDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savetDMouseEntered
        savetD1.setVisible(true);
        savetD1.setEnabled(true);
    }//GEN-LAST:event_savetDMouseEntered

    private void savetDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savetDMouseExited
        savetD1.setVisible(false);
        savetD1.setEnabled(false);
    }//GEN-LAST:event_savetDMouseExited

    private void canceltDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceltDMouseEntered
        canceltD1.setVisible(true);
        canceltD1.setEnabled(true);
    }//GEN-LAST:event_canceltDMouseEntered

    private void canceltDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceltDMouseExited
        canceltD1.setVisible(false);
        canceltD1.setEnabled(false);
    }//GEN-LAST:event_canceltDMouseExited

    private void cancelEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelEMouseEntered
        cancelE1.setVisible(true);
        cancelE1.setEnabled(true);
    }//GEN-LAST:event_cancelEMouseEntered

    private void cancelEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelEMouseExited
        cancelE1.setVisible(false);
        cancelE1.setEnabled(false);
    }//GEN-LAST:event_cancelEMouseExited

    private void saveEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveEMouseEntered
        saveE1.setVisible(true);
        saveE1.setEnabled(true);
    }//GEN-LAST:event_saveEMouseEntered

    private void saveEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveEMouseExited
        saveE1.setVisible(false);
        saveE1.setEnabled(false);
    }//GEN-LAST:event_saveEMouseExited

    private void savetEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savetEMouseEntered
        savetE1.setVisible(true);
        savetE1.setEnabled(true);
    }//GEN-LAST:event_savetEMouseEntered

    private void savetEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savetEMouseExited
        savetE1.setVisible(false);
        savetE1.setEnabled(false);
    }//GEN-LAST:event_savetEMouseExited

    private void canceltEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceltEMouseEntered
        canceltE1.setVisible(true);
        canceltE1.setEnabled(true);
    }//GEN-LAST:event_canceltEMouseEntered

    private void canceltEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceltEMouseExited
        canceltE1.setVisible(false);
        canceltE1.setEnabled(false);
    }//GEN-LAST:event_canceltEMouseExited

    private void tagelEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tagelEMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if ("0".equals(Eexp.getText())) {
                JOptionPane.showMessageDialog(this, "لا يوجد خصم");
            } else {
                tagelE2.setVisible(true);
                tagelE2.setEnabled(true);
                tage1.setVisible(true);
                tage1.setEnabled(true);
            }
        }
    }//GEN-LAST:event_tagelEMouseClicked

    private void tagelEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tagelEMouseEntered
        tagelE1.setVisible(true);
        tagelE1.setEnabled(true);
    }//GEN-LAST:event_tagelEMouseEntered

    private void tagelEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tagelEMouseExited
        tagelE1.setVisible(false);
        tagelE1.setEnabled(false);
    }//GEN-LAST:event_tagelEMouseExited

    private void khasmEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khasmEMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if ("0".equals(Eexp.getText())) {
                JOptionPane.showMessageDialog(this, "لا يوجد خصم");
            } else if (Double.parseDouble(Empdis.getText()) < Double.parseDouble(Eexp.getText())) {
                khasmE2.setVisible(true);
                khasmE2.setEnabled(true);
                baky1.setVisible(true);
                baky1.setEnabled(true);
            } else if ("0".equals(emptotal.getText())) {
                JOptionPane.showMessageDialog(this, "لا يوجد حساب اليوم");
                tage1.setVisible(true);
                tage1.setEnabled(true);
            } else if (Double.parseDouble(Empdis.getText()) > Double.parseDouble(emptotal.getText())) {
                JOptionPane.showMessageDialog(this, "مبلغ الخصم اكثر من حساب اليوم !!");
                Empdis.requestFocus();
            } else {
                try {
                    int a = JOptionPane.showConfirmDialog(this, "لتأكيد من اضافة جميع حسابات الموظف اليوم و حفظ البيانات اضغط موافق", "تأكيد", JOptionPane.OK_CANCEL_OPTION);
                    if (a == JOptionPane.OK_OPTION) {
                        emptotaldis.setText(String.valueOf(Double.parseDouble(emptotal.getText()) - Double.parseDouble(Empdis.getText())));

                        double etotal = Double.parseDouble(Empdis.getText()) + Double.parseDouble(paybake.getText());

                        String sts = "UPDATE expenses SET Cost_exp='" + 0 + "', Payback ='" + etotal + "' WHERE Name_exp='" + empname.getSelectedItem() + "' and Date_of_exp='" + dateday.getText() + "'";
                        boolean ifu = DB.GO.runNunQuery(sts);
                        if (ifu) {

                            String str = "INSERT INTO accounttotale VALUES ('" + dateday.getText() + "', '" + empname.getSelectedItem() + "', " + empnum.getText() + ", '" + emptotaldis.getText() + "', '" + Empdis.getText() + "', '" + emptotal.getText() + "')";
                            boolean ifadd = DB.GO.runNunQuery(str);
                            if (ifadd) {
                                JOptionPane.showMessageDialog(this, "تم جفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);
                                docname.setSelectedItem(null);
                                empname.setSelectedItem(null);
                                Empdis.setText("0");
                                Eexp.setText("0");
                                accdnum.setText("1");
                                accenum.setText("1");
                                sumEmpcost();
                            } else {
                                JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } catch (Exception ex) {
                    ex.getMessage();
                }

            }
        }
    }//GEN-LAST:event_khasmEMouseClicked

    private void khasmEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khasmEMouseEntered
        khasmE1.setVisible(true);
        khasmE1.setEnabled(true);
    }//GEN-LAST:event_khasmEMouseEntered

    private void khasmEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khasmEMouseExited
        khasmE1.setVisible(false);
        khasmE1.setEnabled(false);
    }//GEN-LAST:event_khasmEMouseExited

    private void canceltEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceltEMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            tagelE2.setVisible(false);
            tagelE2.setEnabled(false);
            tage1.setVisible(false);
            tage1.setEnabled(false);
        }
    }//GEN-LAST:event_canceltEMouseClicked

    private void cancelEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelEMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            khasmE2.setVisible(false);
            khasmE2.setEnabled(false);
            baky1.setVisible(false);
            baky1.setEnabled(false);
        }
    }//GEN-LAST:event_cancelEMouseClicked

    private void tagelDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tagelDMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if ("0".equals(Dexp.getText())) {
                JOptionPane.showMessageDialog(this, "لا يوجد خصم");
            } else {
                tagelD2.setVisible(true);
                tagelD2.setEnabled(true);
                tage.setVisible(true);
                tage.setEnabled(true);
            }
        }
    }//GEN-LAST:event_tagelDMouseClicked

    private void tagelDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tagelDMouseEntered
        tagelD1.setVisible(true);
        tagelD1.setEnabled(true);
    }//GEN-LAST:event_tagelDMouseEntered

    private void tagelDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tagelDMouseExited
        tagelD1.setVisible(false);
        tagelD1.setEnabled(false);
    }//GEN-LAST:event_tagelDMouseExited

    private void khasmDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khasmDMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if ("0".equals(Dexp.getText())) {
                JOptionPane.showMessageDialog(this, "لا يوجد خصم");
            } else if (Double.parseDouble(Docdis.getText()) < Double.parseDouble(Dexp.getText())) {
                khasmD2.setVisible(true);
                khasmD2.setEnabled(true);
                baky.setVisible(true);
                baky.setEnabled(true);
            } else if ("0".equals(doctotal.getText())) {
                JOptionPane.showMessageDialog(this, "لا يوجد حساب اليوم");
                tage.setVisible(true);
                tage.setEnabled(true);
            } else if (Double.parseDouble(Docdis.getText()) > Double.parseDouble(doctotal.getText())) {
                JOptionPane.showMessageDialog(this, "مبلغ الخصم اكثر من حساب اليوم !!");
                Docdis.requestFocus();
            } else {
                try {
                    int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق", "تأكيد", JOptionPane.OK_CANCEL_OPTION);
                    if (a == JOptionPane.OK_OPTION) {
                        doctotaldis.setText(String.valueOf(Double.parseDouble(doctotal.getText()) - Double.parseDouble(Docdis.getText())));

                        double dtotal = Double.parseDouble(Docdis.getText()) + Double.parseDouble(paybakd.getText());
                        String sts = "UPDATE expenses SET Cost_exp='" + 0 + "', Payback='" + dtotal + "' WHERE Name_exp ='" + docname.getSelectedItem() + "' and Date_of_exp='" + dateday.getText() + "'";
                        boolean ifu = DB.GO.runNunQuery(sts);
                        if (ifu) {

                            String str = "INSERT INTO accounttotald VALUES ('" + dateday.getText() + "', '" + docname.getSelectedItem() + "', " + docnum.getText() + ", '" + doctotaldis.getText() + "', " + Docdis.getText() + "', '" + doctotal.getText() + "')";
                            boolean ifadd = DB.GO.runNunQuery(str);
                            if (ifadd) {
                                JOptionPane.showMessageDialog(this, "تم جفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);
                                docname.setSelectedItem(null);
                                empname.setSelectedItem(null);
                                Docdis.setText("0");
                                Dexp.setText("0");
                                accdnum.setText("1");
                                accenum.setText("1");
                                sumdocexp();
                            } else {
                                JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                } catch (Exception ex) {
                    ex.getMessage();
                }

            }
        }
    }//GEN-LAST:event_khasmDMouseClicked

    private void khasmDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khasmDMouseEntered
        khasmD1.setVisible(true);
        khasmD1.setEnabled(true);
    }//GEN-LAST:event_khasmDMouseEntered

    private void khasmDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khasmDMouseExited
        khasmD1.setVisible(false);
        khasmD1.setEnabled(false);
    }//GEN-LAST:event_khasmDMouseExited

    private void cancelDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelDMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            khasmD2.setVisible(false);
            khasmD2.setEnabled(false);
            baky.setVisible(false);
            baky.setEnabled(false);
        }
    }//GEN-LAST:event_cancelDMouseClicked

    private void canceltDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceltDMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            tagelD2.setVisible(false);
            tagelD2.setEnabled(false);
            tage.setVisible(false);
            tage.setEnabled(false);
        }
    }//GEN-LAST:event_canceltDMouseClicked

    private void EAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EAddMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
                if ("".equals(dateday.getText()) || "".equals(empnum.getText()) || empname.getSelectedItem() == null || "0".equals(emptotal.getText())) {
                    JOptionPane.showMessageDialog(this, "ربم لم تدخال جميع البيانات او لا يوجد حساب");
                } else if ("0".equals(Eexp.getText()) || "".equals(Eexp.getText()) && "0".equals(Empdis.getText()) || "".equals(Empdis.getText())) {
                    int a = JOptionPane.showConfirmDialog(this, "لتأكيد انه تم اضافة كل حسابات الموظف اليوم اضغط موافق", "تأكيد", JOptionPane.OK_CANCEL_OPTION);
                    if (a == JOptionPane.OK_OPTION) {
                        String str = "INSERT INTO accounttotale VALUES ('" + dateday.getText() + "', '" + empname.getSelectedItem() + "', " + empnum.getText() + ", '" + emptotal.getText() + "', '" + Empdis.getText() + "', '" + emptotal.getText() + "')";
                        boolean ifadd = DB.GO.runNunQuery(str);
                        if (ifadd) {
                            JOptionPane.showMessageDialog(this, "تم جفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);
                            docname.setSelectedItem(null);
                            empname.setSelectedItem(null);
                            Controls.Tools.clearText(this);
                            coste.setText("");
                            costd.setText("");
                            accdnum.setText("1");
                            accenum.setText("1");
                            totalcoste.setText("");
                            sumEmpcost();
                            sumDoccost();
                        } else {
                            JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "يوجد مصروفات يجب خصمها او تأجيلها اولا");
                }
             
        }
    }//GEN-LAST:event_EAddMouseClicked

    private void DAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DAddMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if ("".equals(dateday.getText()) || "".equals(docnum.getText()) || docname.getSelectedItem() == null || "0".equals(doctotal.getText())) {
                JOptionPane.showMessageDialog(this, "ربم لم تدخال جميع البيانات او لا يوجد حساب");
            } else if ("0".equals(Dexp.getText()) || "".equals(Dexp.getText()) && "0".equals(Docdis.getText()) || "".equals(Docdis.getText())) {
                int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق", "تأكيد", JOptionPane.OK_CANCEL_OPTION);
                if (a == JOptionPane.OK_OPTION) {
                    String str = "INSERT INTO accounttotald VALUES ('" + dateday.getText() + "', '" + docname.getSelectedItem() + "', " + docnum.getText() + ", '" + doctotal.getText() + "', '" + Docdis.getText() + "', '" + doctotal.getText() + "')";
                    boolean ifadd = DB.GO.runNunQuery(str);
                    if (ifadd) {
                        JOptionPane.showMessageDialog(this, "تم جفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);
                        docname.setSelectedItem(null);
                        empname.setSelectedItem(null);
                        Controls.Tools.clearText(this);
                        coste.setText("");
                        costd.setText("");
                        totalcoste.setText("");
                        accdnum.setText("1");
                        accenum.setText("1");
                        sumEmpcost();
                        sumDoccost();
                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "يوجد مصروفات يجب خصمها او تأجيلها اولا");
            }
        }
    }//GEN-LAST:event_DAddMouseClicked

    private void saveEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveEMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            emptotaldis.setText(String.valueOf(Double.parseDouble(emptotal.getText()) - Double.parseDouble(Empdis.getText())));
            String count = String.valueOf(Double.parseDouble(Eexp.getText()) - Double.parseDouble(Empdis.getText()));
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String datee = f.format(tageldate2.getDate());
            try {
                double etotal = Double.parseDouble(Empdis.getText()) + Double.parseDouble(paybake.getText());
                String sts = "UPDATE expenses SET Cost_exp='" + count + "', Payback='" + etotal + "', Date_of_exp='" + datee + "' WHERE Name_exp ='" + empname.getSelectedItem() + "' and Date_of_exp='" + dateday.getText() + "'";
                boolean ifu = DB.GO.runNunQuery(sts);
                if (ifu) {
                    int a = JOptionPane.showConfirmDialog(this, "لتأكيد من اضافة جميع حسابات الموظف اليوم و حفظ البيانات اضغط موافق", "تأكيد", JOptionPane.OK_CANCEL_OPTION);
                    if (a == JOptionPane.OK_OPTION) {
                        String str = "INSERT INTO accounttotale VALUES ('" + dateday.getText() + "', '" + empname.getSelectedItem() + "', " + empnum.getText() + ", '" + emptotaldis.getText() + "', '" + Empdis.getText() + "', '" + emptotal.getText() + "')";
                        boolean ifadd = DB.GO.runNunQuery(str);
                        if (ifadd) {
                            JOptionPane.showMessageDialog(this, "تم جفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);
                            docname.setSelectedItem(null);
                            empname.setSelectedItem(null);
                            sumEmpcost();
                            sumEmpexp();
                            baky1.setVisible(false);
                            baky1.setEnabled(false);
                            Empdis.setText("0");
                            accdnum.setText("1");
                            accenum.setText("1");
                        } else {
                            JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (Exception ex) {
                ex.getMessage();
            }
        }
    }//GEN-LAST:event_saveEMouseClicked

    private void savetEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savetEMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String datee = f.format(tageldate3.getDate());
            try {
                String sts = "UPDATE expenses SET Date_of_exp='" + datee + "' WHERE Name_exp ='" + empname.getSelectedItem() + "' and Date_of_exp='" + dateday.getText() + "'";
                boolean ifu = DB.GO.runNunQuery(sts);
                if (ifu) {
                    sumEmpexp();
                    JOptionPane.showMessageDialog(this, "تم التأجيل");
                    tage1.setVisible(false);
                    tage1.setEnabled(false);
                }
            } catch (Exception ex) {
                ex.getMessage();
            }
            Empdis.setText("0");
            Eexp.setText("0");
        }
    }//GEN-LAST:event_savetEMouseClicked

    private void saveDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveDMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            doctotaldis.setText(String.valueOf(Double.parseDouble(doctotal.getText()) - Double.parseDouble(Docdis.getText())));
            String count = String.valueOf(Double.parseDouble(Dexp.getText()) - Double.parseDouble(Docdis.getText()));
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String datee = f.format(tageldate1.getDate());
            try {
                double dtotal = Double.parseDouble(Docdis.getText()) + Double.parseDouble(paybakd.getText());
                String sts = "UPDATE expenses SET Cost_exp='" + count + "', Payback='" + dtotal + "', Date_of_exp='" + datee + "' WHERE Name_exp ='" + docname.getSelectedItem() + "' and Date_of_exp='" + dateday.getText() + "'";
                boolean ifu = DB.GO.runNunQuery(sts);
                if (ifu) {

                    int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق", "تأكيد", JOptionPane.OK_CANCEL_OPTION);
                    if (a == JOptionPane.OK_OPTION) {
                        String str = "INSERT INTO accounttotald VALUES ('" + dateday.getText() + "', '" + docname.getSelectedItem() + "', " + docnum.getText() + ", '" + doctotaldis.getText() + "', '" + Docdis.getText() + "', '" + doctotal.getText() + "')";
                        boolean ifadd = DB.GO.runNunQuery(str);
                        if (ifadd) {
                            JOptionPane.showMessageDialog(this, "تم جفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);
                            docname.setSelectedItem(null);
                            empname.setSelectedItem(null);
                            sumdocexp();
                            baky.setVisible(false);
                            baky.setEnabled(false);
                            khasmD2.setVisible(false);
                            khasmD2.setEnabled(false);
                            Docdis.setText("0");
                            accdnum.setText("1");
                            accenum.setText("1");
                        } else {
                            JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            } catch (Exception ex) {
                ex.getMessage();
            }
        }
    }//GEN-LAST:event_saveDMouseClicked

    private void savetDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savetDMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String datee = f.format(tageldate.getDate());
            try {
                String sts = "UPDATE expenses SET Date_of_exp='" + datee + "' WHERE Name_exp ='" + docname.getSelectedItem() + "' and Date_of_exp='" + dateday.getText() + "'";
                boolean ifu = DB.GO.runNunQuery(sts);
                if (ifu) {
                    sumEmpexp();
                    JOptionPane.showMessageDialog(this, "تم التأجيل");
                    tage.setVisible(false);
                    tage.setEnabled(false);
                    tagelD2.setVisible(false);
                    tagelD2.setEnabled(false);
                }
            } catch (Exception ex) {
                ex.getMessage();
            }
            Docdis.setText("0");
            Dexp.setText("0");
        }
    }//GEN-LAST:event_savetDMouseClicked

    private void adddcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adddcMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            try {
                if ("0".equals(totalcoste.getText())) {
                    JOptionPane.showMessageDialog(this, "ادخل حساب الموظفين اولا");
                } else {
                    if ("".equals(accdnum.getText()) || "".equals(dateday.getText()) || "".equals(docnum.getText()) || "".equals(docname.getSelectedItem()) || "".equals(costd.getText()) || "0".equals(resnumd.getText()) || "".equals(totalcoste.getText()) || "".equals(chcost.getText()) || "".equals(chnum.getText())) {
                        JOptionPane.showMessageDialog(this, "ربم لم تدخال جميع البيانات او لا يوجد حساب ");
                    } else {
                        doctotal.setText(String.valueOf(Double.parseDouble(chcost.getText()) - Double.parseDouble(totalcoste.getText())));
                        int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق", "تأكيد", JOptionPane.OK_CANCEL_OPTION);
                        if (a == JOptionPane.OK_OPTION) {
                            String str = "INSERT INTO accountd VALUES (" + accdnum.getText() + ", '" + dateday.getText() + "', '" + doctotal.getText() + "', " + docnum.getText() + ", '" + docname.getSelectedItem() + "', " + resnumd.getText() + ", '" + chcost.getText() + "', '" + totalcoste.getText() + "', '" + costd.getText() + "')";
                            boolean ifadd = DB.GO.runNunQuery(str);
                            if (ifadd) {
                                JOptionPane.showMessageDialog(this, "تم جفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);

                                //docnum.setText("");
                                totalcoste.setText("0");
                                costd.setText("0");
                                resnumd.setText("0");
                                accdnum.setText("1");
                                empname.setSelectedItem(null);
                                docname.setSelectedItem(null);
                                sumdocexp();
                                sumDoccost();
                            } else {
                                JOptionPane.showMessageDialog(this, "...لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "لم يتم جفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "تم الادخال من قبل");
            }
        }
    }//GEN-LAST:event_adddcMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(acc_day.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(acc_day.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(acc_day.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(acc_day.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new acc_day().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DAdd;
    private javax.swing.JLabel DAdd1;
    private javax.swing.JPanel DOCEXP;
    private javax.swing.JTextField Dexp;
    private javax.swing.JPanel DocAdd;
    private javax.swing.JTextField Docdis;
    private javax.swing.JLabel EAdd;
    private javax.swing.JLabel EAdd1;
    private javax.swing.JPanel EMPEXP;
    private javax.swing.JTextField Eexp;
    private javax.swing.JPanel EmpAdd;
    private javax.swing.JTextField Empdis;
    private javax.swing.JLabel _;
    private javax.swing.JLabel _1;
    private javax.swing.JTextField accdnum;
    private javax.swing.JTextField accenum;
    private javax.swing.JLabel adddc;
    private javax.swing.JLabel adddc1;
    private javax.swing.JLabel adde;
    private javax.swing.JLabel adde1;
    private javax.swing.JPanel baky;
    private javax.swing.JPanel baky1;
    private javax.swing.JLabel bar;
    private javax.swing.JLabel cancelD;
    private javax.swing.JLabel cancelD1;
    private javax.swing.JLabel cancelE;
    private javax.swing.JLabel cancelE1;
    private javax.swing.JLabel canceltD;
    private javax.swing.JLabel canceltD1;
    private javax.swing.JLabel canceltE;
    private javax.swing.JLabel canceltE1;
    private javax.swing.JTextField chcost;
    private javax.swing.JLabel chnum;
    private javax.swing.JLabel costd;
    private javax.swing.JLabel coste;
    private javax.swing.JLabel dateday;
    private javax.swing.JLabel dc;
    private javax.swing.JLabel dc1;
    private javax.swing.JLabel dc2;
    private javax.swing.JPanel doc;
    private javax.swing.JComboBox<String> docname;
    private javax.swing.JTextField docnum;
    private javax.swing.JTextField doctotal;
    private javax.swing.JTextField doctotaldis;
    private javax.swing.JLabel em;
    private javax.swing.JLabel em1;
    private javax.swing.JLabel em2;
    private javax.swing.JPanel emp;
    private javax.swing.JTextField empcost;
    private javax.swing.JTextField empcostday;
    private javax.swing.JComboBox<String> empname;
    private javax.swing.JTextField empnum;
    private javax.swing.JTextField emptotal;
    private javax.swing.JTextField emptotaldis;
    private javax.swing.JLabel exit;
    private javax.swing.JLabel exit1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel khasmD;
    private javax.swing.JLabel khasmD1;
    private javax.swing.JLabel khasmD2;
    private javax.swing.JLabel khasmE;
    private javax.swing.JLabel khasmE1;
    private javax.swing.JLabel khasmE2;
    private javax.swing.JLabel main;
    private javax.swing.JLabel maine;
    private javax.swing.JLabel maine1;
    private javax.swing.JLabel paybakd;
    private javax.swing.JLabel paybake;
    private javax.swing.JTextField resnum;
    private javax.swing.JTextField resnumd;
    private javax.swing.JLabel saveD;
    private javax.swing.JLabel saveD1;
    private javax.swing.JLabel saveE;
    private javax.swing.JLabel saveE1;
    private javax.swing.JLabel savetD;
    private javax.swing.JLabel savetD1;
    private javax.swing.JLabel savetE;
    private javax.swing.JLabel savetE1;
    private javax.swing.JPanel tage;
    private javax.swing.JPanel tage1;
    private javax.swing.JLabel tagelD;
    private javax.swing.JLabel tagelD1;
    private javax.swing.JLabel tagelD2;
    private javax.swing.JLabel tagelE;
    private javax.swing.JLabel tagelE1;
    private javax.swing.JLabel tagelE2;
    private com.toedter.calendar.JDateChooser tageldate;
    private com.toedter.calendar.JDateChooser tageldate1;
    private com.toedter.calendar.JDateChooser tageldate2;
    private com.toedter.calendar.JDateChooser tageldate3;
    private javax.swing.JLabel totalcoste;
    private javax.swing.JLabel x;
    private javax.swing.JLabel x1;
    // End of variables declaration//GEN-END:variables
}
