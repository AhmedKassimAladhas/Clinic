/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Ahmed Kassem
 */
public class CheckUp extends javax.swing.JFrame {

    int mousex;
    int mousey;

    /**
     * Creates new form CheckUp
     */
    public CheckUp() {
        initComponents();
        x1.setVisible(false);
        x1.setEnabled(false);
        _1.setVisible(false);
        _1.setEnabled(false);
        InfMore1.setVisible(false);
        InfMore1.setEnabled(false);
        SaveAnd1.setVisible(false);
        SaveAnd1.setEnabled(false);
        Save1.setVisible(false);
        Save1.setEnabled(false);
        print1.setVisible(false);
        print1.setEnabled(false);
        exit1.setVisible(false);
        exit1.setEnabled(false);
        rosh.setVisible(false);
        rosh.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        x = new javax.swing.JLabel();
        x1 = new javax.swing.JLabel();
        _ = new javax.swing.JLabel();
        _1 = new javax.swing.JLabel();
        Bar = new javax.swing.JLabel();
        InfMore = new javax.swing.JLabel();
        InfMore1 = new javax.swing.JLabel();
        sv = new javax.swing.JLabel();
        SaveAnd1 = new javax.swing.JLabel();
        sav = new javax.swing.JLabel();
        Save1 = new javax.swing.JLabel();
        prnt = new javax.swing.JLabel();
        print1 = new javax.swing.JLabel();
        ext = new javax.swing.JLabel();
        exit1 = new javax.swing.JLabel();
        T = new javax.swing.JCheckBox();
        W = new javax.swing.JCheckBox();
        D = new javax.swing.JCheckBox();
        S = new javax.swing.JCheckBox();
        H = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        ty = new javax.swing.JCheckBox();
        th = new javax.swing.JCheckBox();
        esh = new javax.swing.JCheckBox();
        dwa = new javax.swing.JCheckBox();
        not = new javax.swing.JCheckBox();
        Main = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        rosh = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        x.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                xMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                xMouseExited(evt);
            }
        });
        getContentPane().add(x);
        x.setBounds(1028, 0, 23, 22);

        x1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RX.png"))); // NOI18N
        getContentPane().add(x1);
        x1.setBounds(1028, 0, 23, 22);

        _.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        _.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                _MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                _MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                _MouseExited(evt);
            }
        });
        getContentPane().add(_);
        _.setBounds(1009, 0, 20, 22);

        _1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/R_.png"))); // NOI18N
        getContentPane().add(_1);
        _1.setBounds(1009, 0, 20, 22);

        Bar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BarMouseDragged(evt);
            }
        });
        Bar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BarMousePressed(evt);
            }
        });
        getContentPane().add(Bar);
        Bar.setBounds(0, 0, 1007, 21);

        InfMore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        InfMore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InfMoreMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                InfMoreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                InfMoreMouseExited(evt);
            }
        });
        getContentPane().add(InfMore);
        InfMore.setBounds(381, 217, 124, 44);

        InfMore1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/اكثر.png"))); // NOI18N
        getContentPane().add(InfMore1);
        InfMore1.setBounds(381, 217, 124, 44);

        sv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                svMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                svMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                svMouseReleased(evt);
            }
        });
        getContentPane().add(sv);
        sv.setBounds(189, 315, 144, 39);

        SaveAnd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/حفظ وطباعة.png"))); // NOI18N
        getContentPane().add(SaveAnd1);
        SaveAnd1.setBounds(189, 315, 144, 39);

        sav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                savMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                savMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                savMouseReleased(evt);
            }
        });
        getContentPane().add(sav);
        sav.setBounds(37, 314, 124, 41);

        Save1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/حفظ.png"))); // NOI18N
        getContentPane().add(Save1);
        Save1.setBounds(37, 314, 124, 41);

        prnt.setToolTipText("");
        prnt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prnt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prntMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                prntMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                prntMouseReleased(evt);
            }
        });
        getContentPane().add(prnt);
        prnt.setBounds(189, 371, 144, 41);

        print1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/طباعة الروشته.png"))); // NOI18N
        getContentPane().add(print1);
        print1.setBounds(189, 371, 144, 41);

        ext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                extMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                extMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                extMouseReleased(evt);
            }
        });
        getContentPane().add(ext);
        ext.setBounds(37, 371, 124, 41);

        exit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Chخروج.png"))); // NOI18N
        getContentPane().add(exit1);
        exit1.setBounds(37, 371, 124, 41);

        ChNum.setEditable(false);
        ChNum.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ChNum.setForeground(new java.awt.Color(255, 255, 255));
        ChNum.setBorder(null);
        ChNum.setCaretColor(new java.awt.Color(255, 255, 255));
        ChNum.setOpaque(false);
        getContentPane().add(ChNum);
        ChNum.setBounds(727, 58, 150, 30);

        DoNum.setEditable(false);
        DoNum.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        DoNum.setForeground(new java.awt.Color(255, 255, 255));
        DoNum.setBorder(null);
        DoNum.setCaretColor(new java.awt.Color(255, 255, 255));
        DoNum.setOpaque(false);
        getContentPane().add(DoNum);
        DoNum.setBounds(382, 58, 150, 30);

        ReNum.setEditable(false);
        ReNum.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ReNum.setForeground(new java.awt.Color(255, 255, 255));
        ReNum.setBorder(null);
        ReNum.setCaretColor(new java.awt.Color(255, 255, 255));
        ReNum.setOpaque(false);
        getContentPane().add(ReNum);
        ReNum.setBounds(727, 122, 150, 30);

        PeNum.setEditable(false);
        PeNum.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        PeNum.setForeground(new java.awt.Color(255, 255, 255));
        PeNum.setBorder(null);
        PeNum.setCaretColor(new java.awt.Color(255, 255, 255));
        PeNum.setOpaque(false);
        getContentPane().add(PeNum);
        PeNum.setBounds(382, 122, 150, 30);

        PeName.setEditable(false);
        PeName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        PeName.setForeground(new java.awt.Color(255, 255, 255));
        PeName.setBorder(null);
        PeName.setCaretColor(new java.awt.Color(255, 255, 255));
        PeName.setOpaque(false);
        getContentPane().add(PeName);
        PeName.setBounds(748, 225, 150, 30);

        height.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        height.setForeground(new java.awt.Color(255, 255, 255));
        height.setBorder(null);
        height.setCaretColor(new java.awt.Color(255, 255, 255));
        height.setOpaque(false);
        getContentPane().add(height);
        height.setBounds(915, 364, 89, 30);

        T.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TItemStateChanged(evt);
            }
        });
        getContentPane().add(T);
        T.setBounds(887, 370, 20, 21);

        PeAge.setEditable(false);
        PeAge.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        PeAge.setForeground(new java.awt.Color(255, 255, 255));
        PeAge.setBorder(null);
        PeAge.setCaretColor(new java.awt.Color(255, 255, 255));
        PeAge.setOpaque(false);
        getContentPane().add(PeAge);
        PeAge.setBounds(550, 225, 85, 30);

        width.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        width.setForeground(new java.awt.Color(255, 255, 255));
        width.setBorder(null);
        width.setCaretColor(new java.awt.Color(255, 255, 255));
        width.setOpaque(false);
        getContentPane().add(width);
        width.setBounds(785, 364, 89, 30);

        W.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                WItemStateChanged(evt);
            }
        });
        getContentPane().add(W);
        W.setBounds(757, 370, 20, 21);

        press.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        press.setForeground(new java.awt.Color(255, 255, 255));
        press.setBorder(null);
        press.setCaretColor(new java.awt.Color(255, 255, 255));
        press.setOpaque(false);
        getContentPane().add(press);
        press.setBounds(655, 364, 89, 30);

        D.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DItemStateChanged(evt);
            }
        });
        getContentPane().add(D);
        D.setBounds(627, 370, 20, 21);

        sugar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        sugar.setForeground(new java.awt.Color(255, 255, 255));
        sugar.setBorder(null);
        sugar.setCaretColor(new java.awt.Color(255, 255, 255));
        sugar.setOpaque(false);
        getContentPane().add(sugar);
        sugar.setBounds(525, 364, 89, 30);

        S.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SItemStateChanged(evt);
            }
        });
        getContentPane().add(S);
        S.setBounds(497, 370, 20, 21);

        temp.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        temp.setForeground(new java.awt.Color(255, 255, 255));
        temp.setBorder(null);
        temp.setCaretColor(new java.awt.Color(255, 255, 255));
        temp.setOpaque(false);
        getContentPane().add(temp);
        temp.setBounds(395, 364, 89, 30);

        H.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                HItemStateChanged(evt);
            }
        });
        getContentPane().add(H);
        H.setBounds(368, 370, 20, 21);

        dateCh.setBackground(new java.awt.Color(23, 39, 90));
        dateCh.setForeground(new java.awt.Color(255, 255, 255));
        dateCh.setDateFormatString("yyyy-MM-dd");
        dateCh.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getContentPane().add(dateCh);
        dateCh.setBounds(39, 128, 157, 29);

        dateRch.setBackground(new java.awt.Color(23, 39, 90));
        dateRch.setForeground(new java.awt.Color(255, 255, 255));
        dateRch.setDateFormatString("yyyy-MM-dd");
        dateRch.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getContentPane().add(dateRch);
        dateRch.setBounds(39, 222, 157, 29);

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane1.setBorder(null);

        tybe.setBackground(new java.awt.Color(23, 39, 90));
        tybe.setColumns(20);
        tybe.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tybe.setForeground(new java.awt.Color(255, 255, 255));
        tybe.setLineWrap(true);
        tybe.setRows(5);
        tybe.setBorder(null);
        tybe.setCaretColor(new java.awt.Color(255, 255, 255));
        tybe.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane1.setViewportView(tybe);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(855, 541, 157, 70);

        jScrollPane2.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane2.setBorder(null);

        thalel.setBackground(new java.awt.Color(23, 39, 90));
        thalel.setColumns(20);
        thalel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        thalel.setForeground(new java.awt.Color(255, 255, 255));
        thalel.setLineWrap(true);
        thalel.setRows(5);
        thalel.setBorder(null);
        thalel.setCaretColor(new java.awt.Color(255, 255, 255));
        thalel.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane2.setViewportView(thalel);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(670, 541, 157, 70);

        jScrollPane3.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane3.setBorder(null);

        eshaat.setBackground(new java.awt.Color(23, 39, 90));
        eshaat.setColumns(20);
        eshaat.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        eshaat.setForeground(new java.awt.Color(255, 255, 255));
        eshaat.setLineWrap(true);
        eshaat.setRows(5);
        eshaat.setBorder(null);
        eshaat.setCaretColor(new java.awt.Color(255, 255, 255));
        eshaat.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane3.setViewportView(eshaat);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(484, 541, 157, 70);

        jScrollPane4.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane4.setBorder(null);

        dwaa.setBackground(new java.awt.Color(23, 39, 90));
        dwaa.setColumns(20);
        dwaa.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        dwaa.setForeground(new java.awt.Color(255, 255, 255));
        dwaa.setLineWrap(true);
        dwaa.setRows(5);
        dwaa.setBorder(null);
        dwaa.setCaretColor(new java.awt.Color(255, 255, 255));
        dwaa.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane4.setViewportView(dwaa);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(274, 518, 157, 124);

        jScrollPane6.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane6.setBorder(null);

        notes.setBackground(new java.awt.Color(23, 39, 90));
        notes.setColumns(20);
        notes.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        notes.setForeground(new java.awt.Color(255, 255, 255));
        notes.setLineWrap(true);
        notes.setRows(5);
        notes.setBorder(null);
        notes.setCaretColor(new java.awt.Color(255, 255, 255));
        notes.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane6.setViewportView(notes);

        getContentPane().add(jScrollPane6);
        jScrollPane6.setBounds(69, 518, 157, 124);

        ty.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tyItemStateChanged(evt);
            }
        });
        getContentPane().add(ty);
        ty.setBounds(920, 630, 20, 21);

        th.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                thItemStateChanged(evt);
            }
        });
        getContentPane().add(th);
        th.setBounds(740, 630, 20, 21);

        esh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eshItemStateChanged(evt);
            }
        });
        getContentPane().add(esh);
        esh.setBounds(550, 630, 20, 21);

        dwa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dwaItemStateChanged(evt);
            }
        });
        getContentPane().add(dwa);
        dwa.setBounds(340, 655, 20, 21);

        not.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                notItemStateChanged(evt);
            }
        });
        getContentPane().add(not);
        not.setBounds(130, 655, 20, 21);

        Main.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Check Up.png"))); // NOI18N
        getContentPane().add(Main);
        Main.setBounds(0, 0, 1050, 700);

        jScrollPane5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jScrollPane5KeyTyped(evt);
            }
        });

        rosh.setColumns(20);
        rosh.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        rosh.setRows(5);
        rosh.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane5.setViewportView(rosh);

        getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(330, 20, 620, 590);

        setSize(new java.awt.Dimension(1050, 700));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void xMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int q = JOptionPane.showConfirmDialog(this, "اضغط موافق لتأكيد الخروج", "خروج", JOptionPane.OK_CANCEL_OPTION);
            if (q == JOptionPane.OK_OPTION) {
                height.setText("");
                height.setEditable(true);
                width.setText("");
                width.setEditable(true);
                press.setText("");
                press.setEditable(true);
                sugar.setText("");
                sugar.setEditable(true);
                temp.setText("");
                temp.setEditable(true);
                tybe.setText("");
                tybe.setEditable(true);
                thalel.setText("");
                thalel.setEditable(true);
                eshaat.setText("");
                eshaat.setEditable(true);
                dwaa.setText("");
                dwaa.setEditable(true);
                notes.setText("");
                notes.setEditable(true);
                dateCh.setCalendar(null);
                dateRch.setCalendar(null);
                this.dispose();
            } else {

            }
        }
    }//GEN-LAST:event_xMouseClicked

    private void xMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseEntered
        x1.setVisible(true);
        x1.setEnabled(true);
    }//GEN-LAST:event_xMouseEntered

    private void xMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseExited
        x1.setVisible(false);
        x1.setEnabled(false);
    }//GEN-LAST:event_xMouseExited

    private void _MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            this.setState(Reservations.ICONIFIED);
        }
    }//GEN-LAST:event__MouseClicked

    private void _MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseEntered
        _1.setVisible(true);
        _1.setEnabled(true);
    }//GEN-LAST:event__MouseEntered

    private void _MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseExited
        _1.setVisible(false);
        _1.setEnabled(false);
    }//GEN-LAST:event__MouseExited

    private void BarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - mousex, y - mousey);
    }//GEN-LAST:event_BarMouseDragged

    private void BarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarMousePressed
        mousex = evt.getX();
        mousey = evt.getY();
    }//GEN-LAST:event_BarMousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DB.GO.icon(this);
        ChNum.setText(DB.GO.autoNumber("check_up", "number"));
        Date data = new Date();
        dateCh.setDate(data);
    }//GEN-LAST:event_formWindowOpened

    private void TItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TItemStateChanged
        if (T.isSelected()) {
            height.setText("غير معروف");
            height.setEditable(false);
        } else {
            height.setText("");
            height.setEditable(true);
        }
    }//GEN-LAST:event_TItemStateChanged

    private void WItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_WItemStateChanged
        if (W.isSelected()) {
            width.setText("غير معروف");
            width.setEditable(false);
        } else {
            width.setText("");
            width.setEditable(true);
        }
    }//GEN-LAST:event_WItemStateChanged

    private void DItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DItemStateChanged
        if (D.isSelected()) {
            press.setText("غير معروف");
            press.setEditable(false);
        } else {
            press.setText("");
            press.setEditable(true);
        }
    }//GEN-LAST:event_DItemStateChanged

    private void SItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SItemStateChanged
        if (S.isSelected()) {
            sugar.setText("غير معروف");
            sugar.setEditable(false);
        } else {
            sugar.setText("");
            sugar.setEditable(true);
        }
    }//GEN-LAST:event_SItemStateChanged

    private void HItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_HItemStateChanged
        if (H.isSelected()) {
            temp.setText("غير معروف");
            temp.setEditable(false);
        } else {
            temp.setText("");
            temp.setEditable(true);
        }
    }//GEN-LAST:event_HItemStateChanged

    private void tyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tyItemStateChanged
        if (ty.isSelected()) {
            tybe.setText("لا يوجد");
            tybe.setEditable(false);
        } else {
            tybe.setText("");
            tybe.setEditable(true);
        }
    }//GEN-LAST:event_tyItemStateChanged

    private void thItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_thItemStateChanged
        if (th.isSelected()) {
            thalel.setText("لا يوجد");
            thalel.setEditable(false);
        } else {
            thalel.setText("");
            thalel.setEditable(true);
        }
    }//GEN-LAST:event_thItemStateChanged

    private void eshItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eshItemStateChanged
        if (esh.isSelected()) {
            eshaat.setText("لا يوجد");
            eshaat.setEditable(false);
        } else {
            eshaat.setText("");
            eshaat.setEditable(true);
        }
    }//GEN-LAST:event_eshItemStateChanged

    private void dwaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dwaItemStateChanged
        if (dwa.isSelected()) {
            dwaa.setText("لا يوجد");
            dwaa.setEditable(false);
        } else {
            dwaa.setText("");
            dwaa.setEditable(true);
        }
    }//GEN-LAST:event_dwaItemStateChanged

    private void notItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_notItemStateChanged
        if (not.isSelected()) {
            notes.setText("لا يوجد");
            notes.setEditable(false);
        } else {
            notes.setText("");
            notes.setEditable(true);
        }
    }//GEN-LAST:event_notItemStateChanged

    private void jScrollPane5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane5KeyTyped

    }//GEN-LAST:event_jScrollPane5KeyTyped

    private void InfMoreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InfMoreMouseEntered
        InfMore1.setVisible(true);
        InfMore1.setEnabled(true);
    }//GEN-LAST:event_InfMoreMouseEntered

    private void InfMoreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InfMoreMouseExited
        InfMore1.setVisible(false);
        InfMore1.setEnabled(false);
    }//GEN-LAST:event_InfMoreMouseExited

    private void InfMoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InfMoreMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            new PInfo().setVisible(true);
        }
    }//GEN-LAST:event_InfMoreMouseClicked

    private void savMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if ("".equals(ChNum.getText()) || "".equals(DoNum.getText()) || "".equals(ReNum.getText()) || "".equals(PeNum.getText()) || "".equals(PeName.getText()) || "".equals(PeAge.getText())
                    || "".equals(height.getText()) || "".equals(width.getText()) || "".equals(press.getText()) || "".equals(sugar.getText())
                    || "".equals(temp.getText()) || "".equals(tybe.getText()) || "".equals(thalel.getText()) || dateCh.getDate() == null
                    || "".equals(eshaat.getText()) || "".equals(dwaa.getText()) || "".equals(notes.getText()) || dateRch.getDate() == null) {

                JOptionPane.showMessageDialog(this, "رجاء ادخال جميع البيانات ");
                height.requestFocus();
            } else {

                int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق");
                if (a == JOptionPane.YES_OPTION) {

                    SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                    String datec = f.format(dateCh.getDate());
                    String dater = f.format(dateRch.getDate());
                    String strad = "INSERT INTO check_up VALUES (" + ChNum.getText() + ", '" + datec + "', '" + tybe.getText() + "', '" + height.getText() + "','"
                            + width.getText() + "', '" + sugar.getText() + "', '" + press.getText() + "', '" + temp.getText() + "', '" + notes.getText() + "', '"
                            + eshaat.getText() + "', '" + thalel.getText() + "', '" + dwaa.getText() + "', '" + dater + "', " + DoNum.getText() + ", " + PeNum.getText() + ", "
                            + ReNum.getText() + ", '" + " " + "')";
                    boolean ifadd = DB.GO.runNunQuery(strad);
                    if (ifadd) {
                        try {
                            Connection coon = DB.ConectionDB.setconn();
                            Statement st = coon.createStatement();
                            String sts = "UPDATE reservations SET DONE='" + "تم" + "' WHERE NUMBER=" + ReNum.getText();
                            st.execute(sts);
                            coon.close();
                        } catch (Exception ex) {
                            ex.getMessage();
                        }
                        JOptionPane.showMessageDialog(this, "تم تسجيل البيانات");
                        height.setText("");
                        height.setEditable(true);
                        width.setText("");
                        width.setEditable(true);
                        press.setText("");
                        press.setEditable(true);
                        sugar.setText("");
                        sugar.setEditable(true);
                        temp.setText("");
                        temp.setEditable(true);
                        tybe.setText("");
                        tybe.setEditable(true);
                        thalel.setText("");
                        thalel.setEditable(true);
                        eshaat.setText("");
                        eshaat.setEditable(true);
                        dwaa.setText("");
                        dwaa.setEditable(true);
                        notes.setText("");
                        notes.setEditable(true);
                        dateCh.setCalendar(null);
                        dateRch.setCalendar(null);
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم تسجيل البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                        height.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "لم يتم تسجيل البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                    height.requestFocus();
                }

            }
        }
    }//GEN-LAST:event_savMouseReleased

    private void savMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savMouseEntered
        Save1.setVisible(true);
        Save1.setEnabled(true);
    }//GEN-LAST:event_savMouseEntered

    private void savMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savMouseExited
        Save1.setVisible(false);
        Save1.setEnabled(false);
    }//GEN-LAST:event_savMouseExited

    private void svMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_svMouseEntered
        SaveAnd1.setVisible(true);
        SaveAnd1.setEnabled(true);
    }//GEN-LAST:event_svMouseEntered

    private void svMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_svMouseExited
        SaveAnd1.setVisible(false);
        SaveAnd1.setEnabled(false);
    }//GEN-LAST:event_svMouseExited

    private void svMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_svMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if ("".equals(ChNum.getText()) || "".equals(DoNum.getText()) || "".equals(ReNum.getText()) || "".equals(PeNum.getText()) || "".equals(PeName.getText()) || "".equals(PeAge.getText())
                    || "".equals(height.getText()) || "".equals(width.getText()) || "".equals(press.getText()) || "".equals(sugar.getText())
                    || "".equals(temp.getText()) || "".equals(tybe.getText()) || "".equals(thalel.getText()) || "".equals(dateCh.getCalendar())
                    || "".equals(eshaat.getText()) || "".equals(dwaa.getText()) || "".equals(notes.getText()) || "".equals(dateRch.getCalendar())) {
                JOptionPane.showMessageDialog(this, "رجاء ادخال جميع البيانات ");
                height.requestFocus();
            } else {
                SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                String datec = f.format(dateCh.getDate());
                String dater = f.format(dateRch.getDate());

                int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق", "حفظ", JOptionPane.OK_CANCEL_OPTION);
                if (a == JOptionPane.OK_OPTION) {
                    String strad = "INSERT INTO check_up VALUES (" + ChNum.getText() + ", '" + datec + "', '" + tybe.getText() + "', '" + height.getText() + "','"
                            + width.getText() + "', '" + sugar.getText() + "', '" + press.getText() + "', '" + temp.getText() + "', '" + notes.getText() + "', '"
                            + eshaat.getText() + "', '" + thalel.getText() + "', '" + dwaa.getText() + "', '" + dater + "', " + DoNum.getText() + ", " + PeNum.getText() + ","
                            + ReNum.getText() + ", '" + " " + "')";
                    boolean ifadd = DB.GO.runNunQuery(strad);
                    if (ifadd) {

                        try {
                            Connection coon = DB.ConectionDB.setconn();
                            Statement st = coon.createStatement();
                            String sts = "UPDATE reservations SET DONE='" + "تم" + "' WHERE NUMBER=" + ReNum.getText();
                            st.execute(sts);
                            coon.close();
                        } catch (Exception ex) {
                            ex.getMessage();
                        }
                        JOptionPane.showMessageDialog(this, "تم تسجيل البيانات");

                        MessageFormat heder = new MessageFormat(MainForm.DName.getText());
                        SimpleDateFormat fs = new SimpleDateFormat("yyyy-MM-dd");
                        String datecs = fs.format(dateCh.getDate());

                        MessageFormat footer = new MessageFormat(" ");

                        String b = "\n\n                                 " + "اسم المريض:" + "" + PeName.getText()
                                + "                       " + "العمر: " + "            " + PeAge.getText()
                                + "\n\n============================================\n\n"
                                + dwaa.getText() + "\n\n\n\n\n\n" + "\n\n============================================\n\n"
                                + "                                                                        "
                                + "................ :توقيع الطبيب" + "\n\n" + "                                                                      " + "تاريخ الكشف:   " + " " + datec;

                        rosh.append(b);
                        try {
                            rosh.print(heder, footer);
                        } catch (PrinterException ex) {
                            Logger.getLogger(CheckUp.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        this.dispose();
                        height.setText("");
                        height.setEditable(true);
                        width.setText("");
                        width.setEditable(true);
                        press.setText("");
                        press.setEditable(true);
                        sugar.setText("");
                        sugar.setEditable(true);
                        temp.setText("");
                        temp.setEditable(true);
                        tybe.setText("");
                        tybe.setEditable(true);
                        thalel.setText("");
                        thalel.setEditable(true);
                        eshaat.setText("");
                        eshaat.setEditable(true);
                        dwaa.setText("");
                        dwaa.setEditable(true);
                        notes.setText("");
                        notes.setEditable(true);
                        dateCh.setCalendar(null);
                        dateRch.setCalendar(null);

                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم تسجيل البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                        height.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "لم يتم تسجيل البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                    height.requestFocus();
                }

            }
        }
    }//GEN-LAST:event_svMouseReleased

    private void prntMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prntMouseEntered
        print1.setVisible(true);
        print1.setEnabled(true);
    }//GEN-LAST:event_prntMouseEntered

    private void prntMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prntMouseExited
        print1.setVisible(false);
        print1.setEnabled(false);
    }//GEN-LAST:event_prntMouseExited

    private void prntMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prntMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON1) {
            MessageFormat heder = new MessageFormat(MainForm.DName.getText());
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String datec = f.format(dateCh.getDate());

            MessageFormat footer = new MessageFormat(" ");

            String b = "\n\n                                 " + "اسم المريض:" + "" + PeName.getText()
                    + "                       " + "العمر: " + "            " + PeAge.getText()
                    + "\n\n============================================\n\n"
                    + dwaa.getText() + "\n\n\n\n\n\n" + "\n\n============================================\n\n"
                    + "                                                                        "
                    + "................ :توقيع الطبيب" + "\n\n" + "                                                                      " + "تاريخ الكشف:   " + " " + datec;

            rosh.append(b);
            try {
                rosh.print(heder, footer);
            } catch (PrinterException ex) {
                Logger.getLogger(CheckUp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_prntMouseReleased

    private void extMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_extMouseEntered
        exit1.setVisible(true);
        exit1.setEnabled(true);
    }//GEN-LAST:event_extMouseEntered

    private void extMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_extMouseExited
        exit1.setVisible(false);
        exit1.setEnabled(false);
    }//GEN-LAST:event_extMouseExited

    private void extMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_extMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int q = JOptionPane.showConfirmDialog(this, "اضغط موافق لتأكيد الخروج", "خروج", JOptionPane.OK_CANCEL_OPTION);
            if (q == JOptionPane.OK_OPTION) {
                height.setText("");
                height.setEditable(true);
                width.setText("");
                width.setEditable(true);
                press.setText("");
                press.setEditable(true);
                sugar.setText("");
                sugar.setEditable(true);
                temp.setText("");
                temp.setEditable(true);
                tybe.setText("");
                tybe.setEditable(true);
                thalel.setText("");
                thalel.setEditable(true);
                eshaat.setText("");
                eshaat.setEditable(true);
                dwaa.setText("");
                dwaa.setEditable(true);
                notes.setText("");
                notes.setEditable(true);
                dateCh.setCalendar(null);
                dateRch.setCalendar(null);
                this.dispose();
            } else {

            }
        }
    }//GEN-LAST:event_extMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bar;
    public static final javax.swing.JTextField ChNum = new javax.swing.JTextField();
    private javax.swing.JCheckBox D;
    public static final javax.swing.JTextField DoNum = new javax.swing.JTextField();
    private javax.swing.JCheckBox H;
    private javax.swing.JLabel InfMore;
    private javax.swing.JLabel InfMore1;
    private javax.swing.JLabel Main;
    public static final javax.swing.JTextField PeAge = new javax.swing.JTextField();
    public static final javax.swing.JTextField PeName = new javax.swing.JTextField();
    public static final javax.swing.JTextField PeNum = new javax.swing.JTextField();
    public static final javax.swing.JTextField ReNum = new javax.swing.JTextField();
    private javax.swing.JCheckBox S;
    private javax.swing.JLabel Save1;
    private javax.swing.JLabel SaveAnd1;
    private javax.swing.JCheckBox T;
    private javax.swing.JCheckBox W;
    private javax.swing.JLabel _;
    private javax.swing.JLabel _1;
    public static final com.toedter.calendar.JDateChooser dateCh = new com.toedter.calendar.JDateChooser();
    public static final com.toedter.calendar.JDateChooser dateRch = new com.toedter.calendar.JDateChooser();
    private javax.swing.JCheckBox dwa;
    public static final javax.swing.JTextArea dwaa = new javax.swing.JTextArea();
    private javax.swing.JCheckBox esh;
    public static final javax.swing.JTextArea eshaat = new javax.swing.JTextArea();
    private javax.swing.JLabel exit1;
    private javax.swing.JLabel ext;
    public static final javax.swing.JTextField height = new javax.swing.JTextField();
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JCheckBox not;
    public static final javax.swing.JTextArea notes = new javax.swing.JTextArea();
    public static final javax.swing.JTextField press = new javax.swing.JTextField();
    private javax.swing.JLabel print1;
    private javax.swing.JLabel prnt;
    private javax.swing.JTextArea rosh;
    private javax.swing.JLabel sav;
    public static final javax.swing.JTextField sugar = new javax.swing.JTextField();
    private javax.swing.JLabel sv;
    public static final javax.swing.JTextField temp = new javax.swing.JTextField();
    private javax.swing.JCheckBox th;
    public static final javax.swing.JTextArea thalel = new javax.swing.JTextArea();
    private javax.swing.JCheckBox ty;
    public static final javax.swing.JTextArea tybe = new javax.swing.JTextArea();
    public static final javax.swing.JTextField width = new javax.swing.JTextField();
    private javax.swing.JLabel x;
    private javax.swing.JLabel x1;
    // End of variables declaration//GEN-END:variables
}
