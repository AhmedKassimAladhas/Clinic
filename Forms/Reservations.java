/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import static Forms.MainForm.Lestre;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ahmed Kassem
 */
public class Reservations extends javax.swing.JFrame {

    int mousex;
    int mousey;

    /**
     * Creates new form Reservations
     */
    public Reservations() {
        initComponents();

        addH1.setVisible(false);
        addH1.setEnabled(false);
        dateD1.setVisible(false);
        dateD1.setEnabled(false);
        dateH1.setVisible(false);
        dateH1.setEnabled(false);
        Exit1.setVisible(false);
        Exit1.setEnabled(false);
        x1.setVisible(false);
        x1.setEnabled(false);
        _1.setVisible(false);
        _1.setEnabled(false);
        patientDate.setVisible(false);
        //patientDate.setEnabled(false);
        // Ename.setVisible(false);
        // Ename.setEnabled(false);
        // Ename2.setVisible(false);
        // Ename2.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Bar = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        x1 = new javax.swing.JLabel();
        _ = new javax.swing.JLabel();
        _1 = new javax.swing.JLabel();
        addH = new javax.swing.JLabel();
        addH1 = new javax.swing.JLabel();
        dateD = new javax.swing.JLabel();
        dateD1 = new javax.swing.JLabel();
        dateH = new javax.swing.JLabel();
        dateH1 = new javax.swing.JLabel();
        Exit = new javax.swing.JLabel();
        Exit1 = new javax.swing.JLabel();
        IDR = new javax.swing.JTextField();
        Cost = new javax.swing.JTextField();
        Spec = new javax.swing.JTextField();
        Enum = new javax.swing.JTextField();
        Docname = new javax.swing.JComboBox<>();
        DateR = new com.toedter.calendar.JDateChooser();
        Main = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        Bar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BarMouseDragged(evt);
            }
        });
        Bar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BarMousePressed(evt);
            }
        });
        getContentPane().add(Bar);
        Bar.setBounds(0, 0, 898, 21);

        x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                xMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                xMouseExited(evt);
            }
        });
        getContentPane().add(x);
        x.setBounds(917, 0, 23, 22);

        x1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RX.png"))); // NOI18N
        getContentPane().add(x1);
        x1.setBounds(917, 0, 23, 22);

        _.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                _MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                _MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                _MouseExited(evt);
            }
        });
        getContentPane().add(_);
        _.setBounds(897, 0, 20, 22);

        _1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/R_.png"))); // NOI18N
        getContentPane().add(_1);
        _1.setBounds(898, 0, 20, 22);

        addH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addHMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addHMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addHMouseExited(evt);
            }
        });
        getContentPane().add(addH);
        addH.setBounds(66, 199, 141, 45);

        addH1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/إضافة حجز.png"))); // NOI18N
        getContentPane().add(addH1);
        addH1.setBounds(66, 199, 141, 45);

        dateD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dateD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dateDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dateDMouseExited(evt);
            }
        });
        getContentPane().add(dateD);
        dateD.setBounds(67, 275, 139, 45);

        dateD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/مواعيد الاطباء.png"))); // NOI18N
        getContentPane().add(dateD1);
        dateD1.setBounds(67, 275, 139, 45);

        dateH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dateH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateHMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dateHMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dateHMouseExited(evt);
            }
        });
        getContentPane().add(dateH);
        dateH.setBounds(65, 355, 141, 45);

        dateH1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/مواعيد الحجوزات.png"))); // NOI18N
        getContentPane().add(dateH1);
        dateH1.setBounds(65, 355, 141, 45);

        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitMouseExited(evt);
            }
        });
        getContentPane().add(Exit);
        Exit.setBounds(65, 434, 143, 44);

        Exit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Rexit.png"))); // NOI18N
        getContentPane().add(Exit1);
        Exit1.setBounds(65, 434, 143, 44);

        IDR.setEditable(false);
        IDR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        IDR.setForeground(new java.awt.Color(17, 29, 82));
        IDR.setBorder(null);
        IDR.setOpaque(false);
        getContentPane().add(IDR);
        IDR.setBounds(690, 60, 120, 30);

        Cost.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Cost.setForeground(new java.awt.Color(17, 29, 82));
        Cost.setBorder(null);
        Cost.setOpaque(false);
        getContentPane().add(Cost);
        Cost.setBounds(342, 135, 120, 26);

        Spec.setEditable(false);
        Spec.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Spec.setForeground(new java.awt.Color(17, 29, 82));
        Spec.setBorder(null);
        Spec.setOpaque(false);
        getContentPane().add(Spec);
        Spec.setBounds(578, 297, 160, 29);

        Pname.setEditable(false);
        Pname.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Pname.setForeground(new java.awt.Color(17, 29, 82));
        Pname.setBorder(null);
        Pname.setOpaque(false);
        getContentPane().add(Pname);
        Pname.setBounds(578, 369, 160, 29);

        Pnum.setEditable(false);
        Pnum.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Pnum.setForeground(new java.awt.Color(17, 29, 82));
        Pnum.setBorder(null);
        Pnum.setOpaque(false);
        getContentPane().add(Pnum);
        Pnum.setBounds(578, 440, 160, 29);

        Enum.setEditable(false);
        Enum.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Enum.setForeground(new java.awt.Color(17, 29, 82));
        Enum.setBorder(null);
        Enum.setOpaque(false);
        getContentPane().add(Enum);
        Enum.setBounds(302, 409, 160, 29);

        Docname.setBackground(new java.awt.Color(204, 204, 204));
        Docname.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Docname.setForeground(new java.awt.Color(17, 29, 82));
        Docname.setBorder(null);
        Docname.setOpaque(false);
        Docname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DocnameItemStateChanged(evt);
            }
        });
        getContentPane().add(Docname);
        Docname.setBounds(577, 226, 162, 28);

        Ename.setBackground(new java.awt.Color(204, 204, 204));
        Ename.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Ename.setForeground(new java.awt.Color(17, 29, 82));
        Ename.setBorder(null);
        Ename.setOpaque(false);
        Ename.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                EnameItemStateChanged(evt);
            }
        });
        getContentPane().add(Ename);
        Ename.setBounds(303, 292, 162, 28);

        Ename2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Ename2.setForeground(new java.awt.Color(17, 29, 82));
        getContentPane().add(Ename2);
        Ename2.setBounds(303, 292, 162, 28);

        DateR.setBackground(new java.awt.Color(204, 204, 204));
        DateR.setDateFormatString("yyyy-MM-dd");
        getContentPane().add(DateR);
        DateR.setBounds(624, 134, 173, 29);

        Main.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Reservations.png"))); // NOI18N
        getContentPane().add(Main);
        Main.setBounds(0, 0, 940, 506);

        patientDate.setDateFormatString("yyyy-MM-dd");
        patientDate.setOpaque(false);
        getContentPane().add(patientDate);
        patientDate.setBounds(460, 50, 87, 20);

        setSize(new java.awt.Dimension(940, 506));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - mousex, y - mousey);
    }//GEN-LAST:event_BarMouseDragged

    private void BarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarMousePressed
        mousex = evt.getX();
        mousey = evt.getY();
    }//GEN-LAST:event_BarMousePressed

    private void addHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addHMouseEntered
        addH1.setVisible(true);
        addH1.setEnabled(true);
    }//GEN-LAST:event_addHMouseEntered

    private void dateDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateDMouseEntered
        dateD1.setVisible(true);
        dateD1.setEnabled(true);
    }//GEN-LAST:event_dateDMouseEntered

    private void dateDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateDMouseExited
        dateD1.setVisible(false);
        dateD1.setEnabled(false);
    }//GEN-LAST:event_dateDMouseExited

    private void dateHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateHMouseEntered
        dateH1.setVisible(true);
        dateH1.setEnabled(true);
    }//GEN-LAST:event_dateHMouseEntered

    private void ExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseEntered
        Exit1.setVisible(true);
        Exit1.setEnabled(true);
    }//GEN-LAST:event_ExitMouseEntered

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int q = JOptionPane.showConfirmDialog(this, "اضغط موافق لتأكيد الخروج", "خروج", JOptionPane.OK_CANCEL_OPTION);
            if (q == JOptionPane.OK_OPTION) {
                this.dispose();
            } else {

            }
        }
    }//GEN-LAST:event_ExitMouseClicked

    private void xMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseEntered
        x1.setVisible(true);
        x1.setEnabled(true);
    }//GEN-LAST:event_xMouseEntered

    private void xMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseExited
        x1.setVisible(false);
        x1.setEnabled(false);
    }//GEN-LAST:event_xMouseExited

    private void _MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseEntered
        _1.setVisible(true);
        _1.setEnabled(true);
    }//GEN-LAST:event__MouseEntered

    private void _MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseExited
        _1.setVisible(false);
        _1.setEnabled(false);
    }//GEN-LAST:event__MouseExited

    private void _MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            this.setState(Reservations.ICONIFIED);
        }
    }//GEN-LAST:event__MouseClicked

    private void xMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int q = JOptionPane.showConfirmDialog(this, "اضغط موافق لتأكيد الخروج", "خروج", JOptionPane.OK_CANCEL_OPTION);
            if (q == JOptionPane.OK_OPTION) {
                this.dispose();
            } else {

            }
        }
    }//GEN-LAST:event_xMouseClicked
    public void lestD() {
        try {
            Connection con = DB.ConectionDB.setconn();
            String strs = "SELECT * FROM doctors WHERE name like '%" + Docname.getSelectedItem() + "%'";
            Statement st = con.createStatement();
            ResultSet r = st.executeQuery(strs);

            while (r.next()) {
                String id = r.getString(1);
                String name = r.getString(2);
                String sp = r.getString(3);
                String slr = r.getString(4);
                if (Docname.getSelectedItem().equals(r.getString(2))) {
                    Spec.setText(r.getString(3));
                    Cost.setText(slr);
                }

            }
        } catch (Exception ex) {

        }
    }

    public void lestE() {
        try {
            Connection con = DB.ConectionDB.setconn();
            String strs = "SELECT * FROM Employees WHERE name like '%" + Ename.getSelectedItem() + "%'";
            Statement st = con.createStatement();
            ResultSet r = st.executeQuery(strs);

            while (r.next()) {
                r.getString(1);
                r.getString(2);
                if (Ename.getSelectedItem().equals(r.getString(2))) {
                    Enum.setText(r.getString(1));
                }

            }
        } catch (Exception ex) {

        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DB.GO.icon(this);
        DB.GO.fillCompo("Doctors", "Name", Docname);
        try {
            Connection con = DB.ConectionDB.setconn();
            String strs = "SELECT Number FROM Employees WHERE name like '%" + MainFormE.Name2.getText() + "%'";
            Statement st = con.createStatement();
            ResultSet r = st.executeQuery(strs);

            while (r.next()) {
                Enum.setText(r.getString("Number"));

            }
        } catch (Exception ex) {

        }
        IDR.setText(DB.GO.autoNumber("Reservations", "Number"));
        Docname.setSelectedItem(null);
        Ename.setSelectedItem(null);
        Cost.setText("");
    }//GEN-LAST:event_formWindowOpened

    private void addHMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addHMouseExited
        addH1.setVisible(false);
        addH1.setEnabled(false);
    }//GEN-LAST:event_addHMouseExited

    private void dateHMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateHMouseExited
        dateH1.setVisible(false);
        dateH1.setEnabled(false);
    }//GEN-LAST:event_dateHMouseExited

    private void ExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseExited
        Exit1.setVisible(false);
        Exit1.setEnabled(false);
    }//GEN-LAST:event_ExitMouseExited

    private void dateDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateDMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            new Doctors_Date().setVisible(true);
        }
    }//GEN-LAST:event_dateDMouseClicked
    public void Lestre() {
        DefaultTableModel table = new DefaultTableModel();
        table.addColumn("رقم الحجز");
        table.addColumn("تاريخ الحجز");
        table.addColumn("اسم المريض");
        table.addColumn("اسم الدكتور");
        table.addColumn("الكشف");

        try {
            Connection con = DB.ConectionDB.setconn();
            Statement st = con.createStatement();
            String strs = "SELECT * FROM reservations_data WHERE  DATE_RESERVAT LIKE '%" + MainForm.Ddate.getText() + "%'";
            ResultSet r = st.executeQuery(strs);

            while (r.next()) {
                table.addRow(new Object[]{
                    r.getString(1),
                    r.getString(2),
                    r.getString(4),
                    r.getString(5),
                    r.getString(9),});
                Lestre.setModel(table);

            }

        } catch (Exception ex) {

        }
    }

    private void addHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addHMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            try {
                if ("".equals(IDR.getText()) || "".equals(Cost.getText()) || DateR.getCalendar() == null || "".equals(Docname.getSelectedItem()) || "".equals(Ename.getSelectedItem()) || "".equals(Spec.getText()) || "".equals(Enum.getText()) || "".equals(Pname.getText()) || "".equals(Pnum.getText())) {
                    JOptionPane.showMessageDialog(this, "رجاء ادخال جميع البيانات ");
                } else {
                    int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق", "حفظ", JOptionPane.OK_CANCEL_OPTION);
                    if (a == JOptionPane.OK_OPTION) {
                        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                        String DDate = f.format(DateR.getDate());

                        String stra = "INSERT INTO RESERVATIONS VALUES (" + IDR.getText() + ", '" + DDate + "', '" + Cost.getText() + "', " + Pnum.getText() + ", " + Enum.getText() + ", '" + Docname.getSelectedItem() + "', '" + " " + "')";
                        boolean ifadd = DB.GO.runNunQuery(stra);
                        if (ifadd) {
                            JOptionPane.showMessageDialog(this, "تم تسجيل البيانات");
                            
                            Date date = new Date();
                            SimpleDateFormat fn = new SimpleDateFormat("yyyy");
                            int b = Integer.parseInt(fn.format(patientDate.getDate()));
                            int bn = Integer.parseInt(fn.format(date));
                            int age = bn - b;
                            String stru = "UPDATE PATIENTS SET Age=" + age + " WHERE NUMBER=" + Pnum.getText();
                            DB.GO.runNunQuery(stru);
                            
                            Controls.Tools.clearText(this);
                            IDR.setText(DB.GO.autoNumber("Reservations", "Number"));
                            Docname.setSelectedItem(null);
                            Ename.setSelectedItem(null);
                            Lestre();
                            this.dispose();
                            
                        } else {
                            JOptionPane.showMessageDialog(this, "لم يتم تسجيل البيانات");
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم تسجيل البيانات");
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_addHMouseClicked

    private void DocnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DocnameItemStateChanged
        Spec.setText("");
        lestD();
    }//GEN-LAST:event_DocnameItemStateChanged

    private void EnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_EnameItemStateChanged
        lestE();
    }//GEN-LAST:event_EnameItemStateChanged

    private void dateHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateHMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            new Resrv().setVisible(true);
        }
    }//GEN-LAST:event_dateHMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reservations().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bar;
    private javax.swing.JTextField Cost;
    private com.toedter.calendar.JDateChooser DateR;
    private javax.swing.JComboBox<String> Docname;
    public static final javax.swing.JComboBox<String> Ename = new javax.swing.JComboBox<>();
    public static final javax.swing.JLabel Ename2 = new javax.swing.JLabel();
    private javax.swing.JTextField Enum;
    private javax.swing.JLabel Exit;
    private javax.swing.JLabel Exit1;
    private javax.swing.JTextField IDR;
    private javax.swing.JLabel Main;
    public static final javax.swing.JTextField Pname = new javax.swing.JTextField();
    public static final javax.swing.JTextField Pnum = new javax.swing.JTextField();
    private javax.swing.JTextField Spec;
    private javax.swing.JLabel _;
    private javax.swing.JLabel _1;
    private javax.swing.JLabel addH;
    private javax.swing.JLabel addH1;
    private javax.swing.JLabel dateD;
    private javax.swing.JLabel dateD1;
    private javax.swing.JLabel dateH;
    private javax.swing.JLabel dateH1;
    public static final com.toedter.calendar.JDateChooser patientDate = new com.toedter.calendar.JDateChooser();
    private javax.swing.JLabel x;
    private javax.swing.JLabel x1;
    // End of variables declaration//GEN-END:variables
}
