/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import java.awt.event.MouseEvent;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ahmed Kassem
 */
public class RCheckUp extends javax.swing.JFrame {

    int mousex;
    int mousey;

    /**
     * Creates new form RCheckUp
     */
    public RCheckUp() {
        initComponents();
        x1.setVisible(false);
        x1.setEnabled(false);
        _1.setVisible(false);
        _1.setEnabled(false);
        more1.setVisible(false);
        more1.setEnabled(false);

        Save1.setVisible(false);
        Save1.setEnabled(false);
        print1.setVisible(false);
        print1.setEnabled(false);
        exit1.setVisible(false);
        exit1.setEnabled(false);
        roshR.setVisible(false);
        roshR.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        T = new javax.swing.JCheckBox();
        W = new javax.swing.JCheckBox();
        D = new javax.swing.JCheckBox();
        S = new javax.swing.JCheckBox();
        H = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        ty = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        th = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        esh = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        dwa = new javax.swing.JCheckBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        not = new javax.swing.JCheckBox();
        jScrollPane7 = new javax.swing.JScrollPane();
        save = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        exit1 = new javax.swing.JLabel();
        prn = new javax.swing.JLabel();
        morr = new javax.swing.JLabel();
        Bar = new javax.swing.JLabel();
        _ = new javax.swing.JLabel();
        _1 = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        x1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        roshR = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        ChNumR.setEditable(false);
        ChNumR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ChNumR.setForeground(new java.awt.Color(255, 255, 255));
        ChNumR.setBorder(null);
        ChNumR.setCaretColor(new java.awt.Color(255, 255, 255));
        ChNumR.setOpaque(false);
        getContentPane().add(ChNumR);
        ChNumR.setBounds(727, 58, 150, 30);

        DoNumR.setEditable(false);
        DoNumR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        DoNumR.setForeground(new java.awt.Color(255, 255, 255));
        DoNumR.setBorder(null);
        DoNumR.setCaretColor(new java.awt.Color(255, 255, 255));
        DoNumR.setOpaque(false);
        getContentPane().add(DoNumR);
        DoNumR.setBounds(382, 58, 150, 30);

        PeNumR.setEditable(false);
        PeNumR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        PeNumR.setForeground(new java.awt.Color(255, 255, 255));
        PeNumR.setBorder(null);
        PeNumR.setCaretColor(new java.awt.Color(255, 255, 255));
        PeNumR.setOpaque(false);
        getContentPane().add(PeNumR);
        PeNumR.setBounds(382, 122, 150, 30);

        ReNumR.setEditable(false);
        ReNumR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ReNumR.setForeground(new java.awt.Color(255, 255, 255));
        ReNumR.setBorder(null);
        ReNumR.setCaretColor(new java.awt.Color(255, 255, 255));
        ReNumR.setOpaque(false);
        getContentPane().add(ReNumR);
        ReNumR.setBounds(727, 122, 150, 30);

        PeNameR.setEditable(false);
        PeNameR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        PeNameR.setForeground(new java.awt.Color(255, 255, 255));
        PeNameR.setBorder(null);
        PeNameR.setCaretColor(new java.awt.Color(255, 255, 255));
        PeNameR.setOpaque(false);
        getContentPane().add(PeNameR);
        PeNameR.setBounds(748, 225, 150, 30);

        PeAgeR.setEditable(false);
        PeAgeR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        PeAgeR.setForeground(new java.awt.Color(255, 255, 255));
        PeAgeR.setBorder(null);
        PeAgeR.setCaretColor(new java.awt.Color(255, 255, 255));
        PeAgeR.setOpaque(false);
        getContentPane().add(PeAgeR);
        PeAgeR.setBounds(550, 225, 85, 30);

        heightR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        heightR.setForeground(new java.awt.Color(255, 255, 255));
        heightR.setBorder(null);
        heightR.setCaretColor(new java.awt.Color(255, 255, 255));
        heightR.setOpaque(false);
        getContentPane().add(heightR);
        heightR.setBounds(915, 361, 89, 30);

        T.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TItemStateChanged(evt);
            }
        });
        getContentPane().add(T);
        T.setBounds(887, 370, 20, 21);

        widthR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        widthR.setForeground(new java.awt.Color(255, 255, 255));
        widthR.setBorder(null);
        widthR.setCaretColor(new java.awt.Color(255, 255, 255));
        widthR.setOpaque(false);
        getContentPane().add(widthR);
        widthR.setBounds(785, 361, 89, 30);

        W.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                WItemStateChanged(evt);
            }
        });
        getContentPane().add(W);
        W.setBounds(757, 370, 20, 21);

        pressR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        pressR.setForeground(new java.awt.Color(255, 255, 255));
        pressR.setBorder(null);
        pressR.setCaretColor(new java.awt.Color(255, 255, 255));
        pressR.setOpaque(false);
        getContentPane().add(pressR);
        pressR.setBounds(655, 361, 89, 30);

        D.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DItemStateChanged(evt);
            }
        });
        getContentPane().add(D);
        D.setBounds(627, 370, 20, 21);

        sugarR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        sugarR.setForeground(new java.awt.Color(255, 255, 255));
        sugarR.setBorder(null);
        sugarR.setCaretColor(new java.awt.Color(255, 255, 255));
        sugarR.setOpaque(false);
        getContentPane().add(sugarR);
        sugarR.setBounds(525, 361, 89, 30);

        S.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SItemStateChanged(evt);
            }
        });
        getContentPane().add(S);
        S.setBounds(498, 370, 20, 21);

        tempR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tempR.setForeground(new java.awt.Color(255, 255, 255));
        tempR.setBorder(null);
        tempR.setCaretColor(new java.awt.Color(255, 255, 255));
        tempR.setOpaque(false);
        getContentPane().add(tempR);
        tempR.setBounds(395, 361, 89, 30);

        H.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                HItemStateChanged(evt);
            }
        });
        getContentPane().add(H);
        H.setBounds(370, 370, 20, 21);

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane1.setBorder(null);

        tybeR.setBackground(new java.awt.Color(23, 39, 90));
        tybeR.setColumns(20);
        tybeR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tybeR.setForeground(new java.awt.Color(255, 255, 255));
        tybeR.setLineWrap(true);
        tybeR.setRows(5);
        tybeR.setBorder(null);
        tybeR.setCaretColor(new java.awt.Color(255, 255, 255));
        tybeR.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane1.setViewportView(tybeR);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(855, 536, 157, 70);

        ty.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tyItemStateChanged(evt);
            }
        });
        getContentPane().add(ty);
        ty.setBounds(920, 625, 20, 21);

        jScrollPane2.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane2.setBorder(null);

        thalelR.setBackground(new java.awt.Color(23, 39, 90));
        thalelR.setColumns(20);
        thalelR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        thalelR.setForeground(new java.awt.Color(255, 255, 255));
        thalelR.setLineWrap(true);
        thalelR.setRows(5);
        thalelR.setBorder(null);
        thalelR.setCaretColor(new java.awt.Color(255, 255, 255));
        thalelR.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane2.setViewportView(thalelR);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(670, 536, 157, 70);

        th.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                thItemStateChanged(evt);
            }
        });
        getContentPane().add(th);
        th.setBounds(740, 625, 20, 21);

        jScrollPane3.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane3.setBorder(null);

        eshaatR.setBackground(new java.awt.Color(23, 39, 90));
        eshaatR.setColumns(20);
        eshaatR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        eshaatR.setForeground(new java.awt.Color(255, 255, 255));
        eshaatR.setLineWrap(true);
        eshaatR.setRows(5);
        eshaatR.setBorder(null);
        eshaatR.setCaretColor(new java.awt.Color(255, 255, 255));
        eshaatR.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane3.setViewportView(eshaatR);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(484, 536, 157, 70);

        esh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eshItemStateChanged(evt);
            }
        });
        getContentPane().add(esh);
        esh.setBounds(550, 625, 20, 21);

        jScrollPane4.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane4.setBorder(null);

        dwaaR.setBackground(new java.awt.Color(23, 39, 90));
        dwaaR.setColumns(20);
        dwaaR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        dwaaR.setForeground(new java.awt.Color(255, 255, 255));
        dwaaR.setLineWrap(true);
        dwaaR.setRows(5);
        dwaaR.setBorder(null);
        dwaaR.setCaretColor(new java.awt.Color(255, 255, 255));
        dwaaR.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane4.setViewportView(dwaaR);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(276, 513, 157, 124);

        dwa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dwaItemStateChanged(evt);
            }
        });
        getContentPane().add(dwa);
        dwa.setBounds(340, 650, 20, 21);

        jScrollPane6.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane6.setBorder(null);

        notesR.setBackground(new java.awt.Color(23, 39, 90));
        notesR.setColumns(20);
        notesR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        notesR.setForeground(new java.awt.Color(255, 255, 255));
        notesR.setLineWrap(true);
        notesR.setRows(5);
        notesR.setBorder(null);
        notesR.setCaretColor(new java.awt.Color(255, 255, 255));
        notesR.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane6.setViewportView(notesR);

        getContentPane().add(jScrollPane6);
        jScrollPane6.setBounds(74, 513, 157, 124);

        not.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                notItemStateChanged(evt);
            }
        });
        getContentPane().add(not);
        not.setBounds(130, 650, 20, 21);

        jScrollPane7.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane7.setBorder(null);

        condR.setBackground(new java.awt.Color(23, 39, 90));
        condR.setColumns(20);
        condR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        condR.setForeground(new java.awt.Color(255, 255, 255));
        condR.setLineWrap(true);
        condR.setRows(5);
        condR.setBorder(null);
        condR.setCaretColor(new java.awt.Color(255, 255, 255));
        condR.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane7.setViewportView(condR);

        getContentPane().add(jScrollPane7);
        jScrollPane7.setBounds(84, 305, 192, 70);

        dateRC.setBackground(new java.awt.Color(23, 39, 90));
        dateRC.setForeground(new java.awt.Color(255, 255, 255));
        dateRC.setDateFormatString("yyyy-MM-dd");
        dateRC.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getContentPane().add(dateRC);
        dateRC.setBounds(36, 66, 157, 29);

        save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                saveMouseReleased(evt);
            }
        });
        getContentPane().add(save);
        save.setBounds(39, 140, 119, 38);

        Save1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/حفظ2.png"))); // NOI18N
        getContentPane().add(Save1);
        Save1.setBounds(39, 140, 119, 38);

        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exitMouseReleased(evt);
            }
        });
        getContentPane().add(exit);
        exit.setBounds(39, 196, 119, 38);

        exit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/خروج2.png"))); // NOI18N
        getContentPane().add(exit1);
        exit1.setBounds(39, 196, 119, 38);

        prn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                prnMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                prnMouseReleased(evt);
            }
        });
        getContentPane().add(prn);
        prn.setBounds(190, 141, 138, 39);

        print1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/طباعة الروشتة2.png"))); // NOI18N
        getContentPane().add(print1);
        print1.setBounds(190, 141, 138, 39);

        morr.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        morr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                morrMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                morrMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                morrMouseExited(evt);
            }
        });
        getContentPane().add(morr);
        morr.setBounds(387, 218, 119, 39);

        more1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/معلومات اكثر2.png"))); // NOI18N
        getContentPane().add(more1);
        more1.setBounds(387, 218, 119, 39);

        Bar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BarMouseDragged(evt);
            }
        });
        Bar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BarMousePressed(evt);
            }
        });
        getContentPane().add(Bar);
        Bar.setBounds(0, 0, 1007, 21);

        _.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        _.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                _MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                _MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                _MouseExited(evt);
            }
        });
        getContentPane().add(_);
        _.setBounds(1009, 0, 20, 22);

        _1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/R_.png"))); // NOI18N
        getContentPane().add(_1);
        _1.setBounds(1009, 0, 20, 22);

        x.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                xMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                xMouseExited(evt);
            }
        });
        getContentPane().add(x);
        x.setBounds(1028, 0, 23, 22);

        x1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RX.png"))); // NOI18N
        getContentPane().add(x1);
        x1.setBounds(1028, 0, 23, 22);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RCheck Up.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1050, 700);

        jScrollPane5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jScrollPane5KeyTyped(evt);
            }
        });

        roshR.setColumns(20);
        roshR.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        roshR.setRows(5);
        roshR.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane5.setViewportView(roshR);

        getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(330, 20, 620, 590);

        setSize(new java.awt.Dimension(1050, 700));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TItemStateChanged
        if (T.isSelected()) {
            heightR.setText("غير معروف");
            heightR.setEditable(false);
        } else {
            heightR.setText("");
            heightR.setEditable(true);
        }
    }//GEN-LAST:event_TItemStateChanged

    private void WItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_WItemStateChanged
        if (W.isSelected()) {
            widthR.setText("غير معروف");
            widthR.setEditable(false);
        } else {
            widthR.setText("");
            widthR.setEditable(true);
        }
    }//GEN-LAST:event_WItemStateChanged

    private void DItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DItemStateChanged
        if (D.isSelected()) {
            pressR.setText("غير معروف");
            pressR.setEditable(false);
        } else {
            pressR.setText("");
            pressR.setEditable(true);
        }
    }//GEN-LAST:event_DItemStateChanged

    private void SItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SItemStateChanged
        if (S.isSelected()) {
            sugarR.setText("غير معروف");
            sugarR.setEditable(false);
        } else {
            sugarR.setText("");
            sugarR.setEditable(true);
        }
    }//GEN-LAST:event_SItemStateChanged

    private void HItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_HItemStateChanged
        if (H.isSelected()) {
            tempR.setText("غير معروف");
            tempR.setEditable(false);
        } else {
            tempR.setText("");
            tempR.setEditable(true);
        }
    }//GEN-LAST:event_HItemStateChanged

    private void tyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tyItemStateChanged
        if (ty.isSelected()) {
            tybeR.setText("لا يوجد");
            tybeR.setEditable(false);
        } else {
            tybeR.setText("");
            tybeR.setEditable(true);
        }
    }//GEN-LAST:event_tyItemStateChanged

    private void thItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_thItemStateChanged
        if (th.isSelected()) {
            thalelR.setText("لا يوجد");
            thalelR.setEditable(false);
        } else {
            thalelR.setText("");
            thalelR.setEditable(true);
        }
    }//GEN-LAST:event_thItemStateChanged

    private void eshItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eshItemStateChanged
        if (esh.isSelected()) {
            eshaatR.setText("لا يوجد");
            eshaatR.setEditable(false);
        } else {
            eshaatR.setText("");
            eshaatR.setEditable(true);
        }
    }//GEN-LAST:event_eshItemStateChanged

    private void dwaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dwaItemStateChanged
        if (dwa.isSelected()) {
            dwaaR.setText("لا يوجد");
            dwaaR.setEditable(false);
        } else {
            dwaaR.setText("");
            dwaaR.setEditable(true);
        }
    }//GEN-LAST:event_dwaItemStateChanged

    private void notItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_notItemStateChanged
        if (not.isSelected()) {
            notesR.setText("لا يوجد");
            notesR.setEditable(false);
        } else {
            notesR.setText("");
            notesR.setEditable(true);
        }
    }//GEN-LAST:event_notItemStateChanged

    private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
        exit1.setVisible(true);
        exit1.setEnabled(true);
    }//GEN-LAST:event_exitMouseEntered

    private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
        exit1.setVisible(false);
        exit1.setEnabled(false);
    }//GEN-LAST:event_exitMouseExited

    private void BarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - mousex, y - mousey);
    }//GEN-LAST:event_BarMouseDragged

    private void BarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarMousePressed
        mousex = evt.getX();
        mousey = evt.getY();
    }//GEN-LAST:event_BarMousePressed

    private void _MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            this.setState(Reservations.ICONIFIED);
        }
    }//GEN-LAST:event__MouseClicked

    private void _MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseEntered
        _1.setVisible(true);
        _1.setEnabled(true);
    }//GEN-LAST:event__MouseEntered

    private void _MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__MouseExited
        _1.setVisible(false);
        _1.setEnabled(false);
    }//GEN-LAST:event__MouseExited

    private void xMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int q = JOptionPane.showConfirmDialog(this, "اضغط موافق لتأكيد الخروج", "خروج", JOptionPane.OK_CANCEL_OPTION);
            if (q == JOptionPane.OK_OPTION) {
                heightR.setText("");
                heightR.setEditable(true);
                widthR.setText("");
                widthR.setEditable(true);
                pressR.setText("");
                pressR.setEditable(true);
                sugarR.setText("");
                sugarR.setEditable(true);
                tempR.setText("");
                tempR.setEditable(true);
                tybeR.setText("");
                tybeR.setEditable(true);
                thalelR.setText("");
                thalelR.setEditable(true);
                eshaatR.setText("");
                eshaatR.setEditable(true);
                dwaaR.setText("");
                dwaaR.setEditable(true);
                notesR.setText("");
                condR.setText("");
                condR.setEditable(true);
                notesR.setEditable(true);
                dateRC.setCalendar(null);
                this.dispose();
            } else {

            }
        }
    }//GEN-LAST:event_xMouseClicked

    private void xMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseEntered
        x1.setVisible(true);
        x1.setEnabled(true);
    }//GEN-LAST:event_xMouseEntered

    private void xMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseExited
        x1.setVisible(false);
        x1.setEnabled(false);
    }//GEN-LAST:event_xMouseExited

    private void jScrollPane5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane5KeyTyped

    }//GEN-LAST:event_jScrollPane5KeyTyped

    private void exitMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int q = JOptionPane.showConfirmDialog(this, "اضغط موافق لتأكيد الخروج", "خروج", JOptionPane.OK_CANCEL_OPTION);
            if (q == JOptionPane.OK_OPTION) {
                this.dispose();
                heightR.setText("");
                heightR.setEditable(true);
                widthR.setText("");
                widthR.setEditable(true);
                pressR.setText("");
                pressR.setEditable(true);
                sugarR.setText("");
                sugarR.setEditable(true);
                tempR.setText("");
                tempR.setEditable(true);
                tybeR.setText("");
                tybeR.setEditable(true);
                thalelR.setText("");
                thalelR.setEditable(true);
                eshaatR.setText("");
                eshaatR.setEditable(true);
                dwaaR.setText("");
                dwaaR.setEditable(true);
                notesR.setText("");
                notesR.setEditable(true);
                condR.setText("");
                condR.setEditable(true);
                dateRC.setCalendar(null);
            } else {

            }
        }
    }//GEN-LAST:event_exitMouseReleased

    private void saveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseReleased
        try {
            if (evt.getButton() == MouseEvent.BUTTON1) {
                if ("".equals(ChNumR.getText()) || "".equals(DoNumR.getText()) || "".equals(ReNumR.getText()) || "".equals(PeNumR.getText()) || "".equals(PeNameR.getText()) || "".equals(PeAgeR.getText())
                        || "".equals(heightR.getText()) || "".equals(widthR.getText()) || "".equals(pressR.getText()) || "".equals(sugarR.getText())
                        || "".equals(tempR.getText()) || "".equals(tybeR.getText()) || "".equals(thalelR.getText()) || "".equals(dateRC.getCalendar())
                        || "".equals(eshaatR.getText()) || "".equals(dwaaR.getText()) || "".equals(notesR.getText()) || "".equals(condR.getText())) {
                    JOptionPane.showMessageDialog(null, "رجاء ادخال جميع البيانات ");
                    dateRC.requestFocus();
                } else {
                    int a = JOptionPane.showConfirmDialog(this, "لتأكيد حفظ البيانات اضغط موافق");
                    if (a == JOptionPane.YES_OPTION) {

                        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                        String dater = f.format(dateRC.getDate());
                        String strad = "INSERT INTO recheck_up VALUES (" + ChNumR.getText() + ", '" + dater + "', '" + tybeR.getText() + "', '"
                                + widthR.getText() + "', '" + sugarR.getText() + "', '" + pressR.getText() + "', '" + tempR.getText() + "', '" + notesR.getText() + "', '" + condR.getText() + "', '"
                                + eshaatR.getText() + "', '" + thalelR.getText() + "', '" + dwaaR.getText() + "', " + DoNumR.getText() + ", " + PeNumR.getText() + ", "
                                + ReNumR.getText() + ")";
                        boolean ifadd = DB.GO.runNunQuery(strad);
                        if (ifadd) {

                            Connection coon = DB.ConectionDB.setconn();
                            Statement st = coon.createStatement();
                            String sts = "UPDATE check_up SET rdone='" + "تم" + "' WHERE NUMBER=" + ChNumR.getText();
                            st.execute(sts);
                            coon.close();

                            JOptionPane.showMessageDialog(this, "تم تسجيل البيانات");
                            this.dispose();
                            heightR.setText("");
                            heightR.setEditable(true);
                            widthR.setText("");
                            widthR.setEditable(true);
                            pressR.setText("");
                            pressR.setEditable(true);
                            sugarR.setText("");
                            sugarR.setEditable(true);
                            tempR.setText("");
                            tempR.setEditable(true);
                            tybeR.setText("");
                            tybeR.setEditable(true);
                            thalelR.setText("");
                            thalelR.setEditable(true);
                            eshaatR.setText("");
                            eshaatR.setEditable(true);
                            dwaaR.setText("");
                            dwaaR.setEditable(true);
                            notesR.setText("");
                            notesR.setEditable(true);
                            condR.setText("");
                            condR.setEditable(true);
                            dateRC.setCalendar(null);

                        } else {
                            JOptionPane.showMessageDialog(this, "لم يتم تسجيل البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);

                            dateRC.requestFocus();

                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم تسجيل البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                        dateRC.requestFocus();
                    }

                }
            }
        } catch (Exception ex) {
            ex.getMessage();
        }
    }//GEN-LAST:event_saveMouseReleased

    private void saveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseEntered
        Save1.setVisible(true);
        Save1.setEnabled(true);
    }//GEN-LAST:event_saveMouseEntered

    private void saveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseExited
        Save1.setVisible(false);
        Save1.setEnabled(false);
    }//GEN-LAST:event_saveMouseExited

    private void prnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prnMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON1) {
            try {
                MessageFormat heder = new MessageFormat(MainForm.DName.getText());
                SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                String datec = f.format(dateRC.getDate());

                MessageFormat footer = new MessageFormat(" ");

                String b = "\n\n                                 " + "اسم المريض:" + "" + PeNameR.getText()
                        + "                       " + "العمر: " + "            " + PeAgeR.getText()
                        + "\n\n============================================\n\n"
                        + dwaaR.getText() + "\n\n\n\n\n\n" + "\n\n============================================\n\n"
                        + "                                                                        "
                        + "................ :توقيع الطبيب" + "\n\n" + "                                                                      " + "تاريخ الكشف:   " + " " + datec;

                roshR.append(b);

                roshR.print(heder, footer);
            } catch (PrinterException ex) {
                Logger.getLogger(CheckUp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_prnMouseReleased

    private void prnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prnMouseEntered
        print1.setVisible(true);
        print1.setEnabled(true);
    }//GEN-LAST:event_prnMouseEntered

    private void prnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prnMouseExited
        print1.setVisible(false);
        print1.setEnabled(false);
    }//GEN-LAST:event_prnMouseExited

    private void morrMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_morrMouseEntered
        more1.setVisible(true);
        more1.setEnabled(true);
    }//GEN-LAST:event_morrMouseEntered

    private void morrMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_morrMouseExited
        more1.setVisible(false);
        more1.setEnabled(false);
    }//GEN-LAST:event_morrMouseExited

    private void morrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_morrMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            new PRInfo().setVisible(true);
        }
    }//GEN-LAST:event_morrMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DB.GO.icon(this);
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RCheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RCheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RCheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RCheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RCheckUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bar;
    public static final javax.swing.JTextField ChNumR = new javax.swing.JTextField();
    private javax.swing.JCheckBox D;
    public static final javax.swing.JTextField DoNumR = new javax.swing.JTextField();
    private javax.swing.JCheckBox H;
    public static final javax.swing.JTextField PeAgeR = new javax.swing.JTextField();
    public static final javax.swing.JTextField PeNameR = new javax.swing.JTextField();
    public static final javax.swing.JTextField PeNumR = new javax.swing.JTextField();
    public static final javax.swing.JTextField ReNumR = new javax.swing.JTextField();
    private javax.swing.JCheckBox S;
    public static final javax.swing.JLabel Save1 = new javax.swing.JLabel();
    private javax.swing.JCheckBox T;
    private javax.swing.JCheckBox W;
    private javax.swing.JLabel _;
    private javax.swing.JLabel _1;
    public static final javax.swing.JTextArea condR = new javax.swing.JTextArea();
    public static final com.toedter.calendar.JDateChooser dateRC = new com.toedter.calendar.JDateChooser();
    private javax.swing.JCheckBox dwa;
    public static final javax.swing.JTextArea dwaaR = new javax.swing.JTextArea();
    private javax.swing.JCheckBox esh;
    public static final javax.swing.JTextArea eshaatR = new javax.swing.JTextArea();
    private javax.swing.JLabel exit;
    private javax.swing.JLabel exit1;
    public static final javax.swing.JTextField heightR = new javax.swing.JTextField();
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    public static final javax.swing.JLabel more1 = new javax.swing.JLabel();
    private javax.swing.JLabel morr;
    private javax.swing.JCheckBox not;
    public static final javax.swing.JTextArea notesR = new javax.swing.JTextArea();
    public static final javax.swing.JTextField pressR = new javax.swing.JTextField();
    public static final javax.swing.JLabel print1 = new javax.swing.JLabel();
    private javax.swing.JLabel prn;
    private javax.swing.JTextArea roshR;
    private javax.swing.JLabel save;
    public static final javax.swing.JTextField sugarR = new javax.swing.JTextField();
    public static final javax.swing.JTextField tempR = new javax.swing.JTextField();
    private javax.swing.JCheckBox th;
    public static final javax.swing.JTextArea thalelR = new javax.swing.JTextArea();
    private javax.swing.JCheckBox ty;
    public static final javax.swing.JTextArea tybeR = new javax.swing.JTextArea();
    public static final javax.swing.JTextField widthR = new javax.swing.JTextField();
    private javax.swing.JLabel x;
    private javax.swing.JLabel x1;
    // End of variables declaration//GEN-END:variables
}
